NDContentPage.OnToolTipsLoaded({63:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx VIP verbosity data type</div></div>",104:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype104\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_agent</div></div></div><div class=\"TTSummary\">The xil_agent class is a class which extends from xil_component.</div></div>",220:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype220\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi4stream_vif_proxy</div></div></div><div class=\"TTSummary\">AXI4STREAM VIF Proxy Class. It has virtual interface for AXI4STREAM VIP interface. Drivers of AXI4STREAM VIP drive transaction/ready onto AXI4STREAM VIP bus interface through APIs(such as&nbsp; put_transaction) of this class, monitor of AXI4STREAM VIP collects AXI4STREAM interface information and convert it into transaction through APIs(get_transaction) in this class.</div></div>",255:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype255\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi4stream_monitor</div></div></div><div class=\"TTSummary\">When active the AXI4STREAM Monitor will record transactions that are presented on the the virtual interface.</div></div>",263:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype263\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi4stream_ready_gen</div></div></div><div class=\"TTSummary\">AXI4Stream Ready generation class. Ready signal of AXI4STREAM VIP is generated independently from other attributes.&nbsp; This class is being used to generate all kinds of different patterns of ready signal which user wants. Please refer section READY Generation of PG277 for more details about how to generate ready.</div></div>",291:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype291\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi4stream_mst_driver</div></div></div><div class=\"TTSummary\">AXI4STREAM Master Driver Class. The driver receives transactions from the user environment and drives stream interface. It returns a completed transaction when the transaction is accepted when the transaction\'s driver_return_item_policy is set to XIL_AXI4STREAM_AT_ACCEPT_RETURN.</div></div>",304:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype304\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi4stream_slv_driver</div></div></div><div class=\"TTSummary\">AXI4STREAM Slave Driver Class. It receives TREADY transaction from the user enviroment and drives the TREADY signal if HAS_TREADY of the VIP is on, else TREADY is set to high all the time.</div></div>",338:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype338\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi4stream_passthrough_agent</div></div></div><div class=\"TTSummary\">AXI4STREAM Passthrough Agent Class. The AXI4STREAM passthrough agent is comprised of other classes which are monitor,runtime master driver,&nbsp; runtime slave driver. By default, passthrough agent is in monitor mode. In order to issue transaction as master, it has to be switched to runtime master mode, in order to receive transaction, it has to be switched into runtime slave mode. Please refer PG 277 section about &quot;Useful Coding Guidelines and Examples&quot; for more details.</div></div>"});