NDContentPage.OnToolTipsLoaded({63:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx VIP verbosity data type</div></div>",104:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype104\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_agent</div></div></div><div class=\"TTSummary\">The xil_agent class is a class which extends from xil_component.</div></div>",370:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP Interger unsigned data type</div></div>",774:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype774\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_vif_mem_proxy</div></div></div><div class=\"TTSummary\">AXI VIF Proxy Class. It has virtual interface for AXI VIP interface. Drivers of AXI VIP drive transaction/ready onto AXI VIP bus interface through APIs(such as&nbsp; put_w/rdata) of this class, monitor of AXI VIP collects AXI interface information and convert it into transaction through APIs(get_w/rdata) in this class.</div></div>",866:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype866\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_monitor</div></div></div><div class=\"TTSummary\">When active the AXI Monitor will record transactions that are presented on the virtual interface.It does below functions: Monitors all 5 AXI channels: AW, AR, R, W, and B.&nbsp; Collects and re-orders R Channel beats and returns a completed transaction when the RLAST is accepted Collects and re-orders B Channel response and returns a completed transaction when the B channel is accepted Transaction based protocol checking</div></div>",980:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype980\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_slv_wr_driver</div></div></div><div class=\"TTSummary\">AXI Slave Write Driver Class.It does : Receives AW Command and the WLAST from the interface and then passes that transaction to the user environment, the user will then create a BRESP transaction and pass it back to the driver to drive the B channel.</div></div>",1020:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1020\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_slv_rd_driver</div></div></div><div class=\"TTSummary\">AXI Slave Read Driver Class. It does below: Receives AR Command from the interface and then passes that command to the user environment. The user will then create a READ transaction and pass it back to the driver to drive the R channel.</div></div>",1072:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1072\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_slv_agent</div></div></div><div class=\"TTSummary\">AXI Slave Agent Class. This class contains other components that comprise the entire Slave Verification component.&nbsp; These are the Monitor, Read Driver and Write Driver.Refer PG267 section about AXI Slave Agent for more details.</div></div>",1091:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1091\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_slv_mem_agent</div></div></div><div class=\"TTSummary\">AXI Slave Agent with Memory model. It inherits all the features of axi_slv_agent and adds a memory model.</div></div>"});