NDSummary.OnToolTipsLoaded("SystemverilogClass:axi_slv_rd_driver",{1020:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1020\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_slv_rd_driver</div></div></div><div class=\"TTSummary\">AXI Slave Read Driver Class. It does below: Receives AR Command from the interface and then passes that command to the user environment. The user will then create a READ transaction and pass it back to the driver to drive the R channel.</div></div>",1022:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">axi_vif_mem_proxy `AXI_PARAM_ORDER&nbsp; vif_proxy; AXI VIF Proxy Class</div></div>",1024:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1024\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_slv_rd_driver&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create an AXI slave read driver</div></div>",1025:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1025\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_reorder_data_ability (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_reorder_ability_t&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets reorder_data_ability of the slave read driver. please refer set_xfer_preemptive_probability in  axi_transaction for more information about usage.</div></div>",1026:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1026\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_reorder_ability_t get_reorder_data_ability ()</div><div class=\"TTSummary\">Returns reorder_data_ability of the slave read driver</div></div>",1027:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1027\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_vif(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">axi_vif_mem_proxy `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Assigns the virtual interface of the slave read driver.</div></div>",1350:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1350\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_arready_gen(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen_t&nbsp;</td><td class=\"PName last\">new_method</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Puts an axi_ready_gen object into arready generation queue of the slave read driver.Once this object is sent to the driver, the arready policy will stay the same till a new arready policy is sent over to the driver.</div></div>",1029:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1029\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> axi_ready_gen_t get_arready_gen()</div><div class=\"TTSummary\">Returns the arready_gen of the slave read driver.</div></div>",971:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype971\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_forward_progress_timeout_value (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets forward_progress_timeout_value of the slave read driver. forward_progress_timeout_value is used for driver to wait a certain number of cycles for any accept beats occurs before it time out.&nbsp; transaction in flight.</div></div>",1031:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1031\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_forward_progress_timeout_value ()</div><div class=\"TTSummary\">Returns forward_progress_timeout_value of the slave read driver</div></div>",1032:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1032\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_waiting_valid_timeout_value (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets waiting_valid_timeout_value of the slave read driver. waiting_valid_timeout_value is used for driver to wait a certain number of cycles for rvalid/rready handshake occurs before it time out.</div></div>",1033:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1033\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_waiting_valid_timeout_value ()</div><div class=\"TTSummary\">Returns waiting_valid_timeout_value of the slave read driver</div></div>",1348:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1348\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_transaction_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_depth</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the maximum number of READ transactions that the slave read driver will have in flight at one time.</div></div>",1349:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1349\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of READ transactions that the slave read driver will have in flight at one time.</div></div>",1036:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1036\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_num_pending_cmds()</div><div class=\"TTSummary\">Returns number of commands in pending of the slave read driver.</div></div>",1037:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1037\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_cmds_inflight()</div><div class=\"TTSummary\">Returns number of commands in flight of the slave read driver.</div></div>",1038:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1038\" class=\"NDPrototype NoParameterForm\">task run_phase()</div><div class=\"TTSummary\">Start control processes for operation of the slave read driver.</div></div>",1039:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1039\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_phase()</div><div class=\"TTSummary\">Stops all control processes of the slave read driver.</div></div>",1040:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1040\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_transaction create_transaction (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_transaction&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns an AXI transaction class that has been &quot;newed&quot; of the slave read driver.</div></div>",1041:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1041\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task get_rd_reactive (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">transfer</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns Read reactive transaction. The slave VIP agent gets read cmd information,fill in data information and send it back to Slave VIP interface. The usage of this API is shown below and it MUST be put in initial, forever procedure since get_rd_reactive is blocking, so does send. Please refer example design simset sim_allconfig for function of fill_payload, fill_ruser, and fill_beat_delay etc.</div></div>",998:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype998\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send_arready(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the ready structure to the slave read driver for controlling the ARREADY channel, the arready policy will stay the same till the driver gets a new ready policy.</div></div>",1043:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1043\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_ready_gen create_ready (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_ready&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns a ready class in the slave read driver that has been &quot;newed&quot;.</div></div>",1044:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1044\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the AXI transaction to the slave read driver</div></div>",1045:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1045\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task wait_rsp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This blocking function will not return until slave read driver send back response transaction</div></div>"});