NDSummary.OnToolTipsLoaded("SystemverilogClass:axi_slv_wr_driver",{980:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype980\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_slv_wr_driver</div></div></div><div class=\"TTSummary\">AXI Slave Write Driver Class.It does : Receives AW Command and the WLAST from the interface and then passes that transaction to the user environment, the user will then create a BRESP transaction and pass it back to the driver to drive the B channel.</div></div>",982:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">axi_vif_mem_proxy `AXI_PARAM_ORDER&nbsp; vif_proxy;AXI VIF Proxy Class</div></div>",984:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype984\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_slv_wr_driver&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create an AXI slave write driver</div></div>",985:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype985\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_vif(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">axi_vif_mem_proxy `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Assigns the virtual interface of the slave write driver.</div></div>",1028:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1028\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_awready_gen(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen_t&nbsp;</td><td class=\"PName last\">new_gen</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Puts an axi_ready_gen object into awready generation queue of the slave write driver. Once this object is sent over to the driver, the awready policy will stay the same till a new awready policy is sent over to the driver.</div></div>",987:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype987\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> axi_ready_gen_t get_awready_gen()</div><div class=\"TTSummary\">Returns awready_gen of the slave write driver.</div></div>",1030:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1030\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_wready_gen(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen_t&nbsp;</td><td class=\"PName last\">new_gen</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Puts an axi_ready_gen object into wready generation queue of the slave write driver. Once this object is sent over to the driver, the wready policy will stay the same till a new wready policy is sent over to the driver.</div></div>",989:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype989\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> axi_ready_gen_t get_wready_gen()</div><div class=\"TTSummary\">Returns wready_gen of the slave write driver.</div></div>",990:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype990\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_reorder_response_ability (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_reorder_ability_t&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets reorder_response_ability of the slave write driver.</div></div>",991:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype991\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_reorder_ability_t get_reorder_response_ability ()</div><div class=\"TTSummary\">Returns reorder_response_ability of the slave write driver</div></div>",992:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype992\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_reorder_backoff_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the reordering backoff timer range of the slave write driver.&nbsp; Since the slave may pop the BRESP quicker than one is available, if there is only one entry then insert a backoff that will allow for some accumulation of time so perhaps another BRESP will be ready to send.</div></div>",993:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype993\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> get_reorder_backoff_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the reordering backoff timer range of the slave write driver.</div></div>",1034:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1034\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_forward_progress_timeout_value (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets forward_progress_timeout_value of the slave write driver,forward_progress_timeout_value is used for the driver to wait a certain number of cycles for any of awready/awvalid, wready/wvalid,bready/bvalid handshakes occur before it time out</div></div>",995:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype995\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_forward_progress_timeout_value ()</div><div class=\"TTSummary\">Returns forward_progress_timeout_value of the slave write driver</div></div>",1035:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1035\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_waiting_valid_timeout_value (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets waiting_valid_timeout_value of the slave write driver, waiting_valid_timeout_value is used for driver to wait a certain number of cycles for bvalid/bready handshake occurs before it time out.</div></div>",1042:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1042\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_waiting_valid_timeout_value ()</div><div class=\"TTSummary\">Returns waiting_valid_timeout_value of the slave write driver.</div></div>",1346:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1346\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_transaction_depth (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_depth</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of WRITE transactions that the slave write Driver will have in flight at one time.</div></div>",1347:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1347\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of WRITE transactions that the slave write driver will have in flight at one time.</div></div>",1000:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1000\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_num_pending_cmds()</div><div class=\"TTSummary\">Returns number of commands in pending of the slave write driver.</div></div>",1001:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1001\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_cmds_inflight()</div><div class=\"TTSummary\">Returns number of commands in flight of the slave write driver.</div></div>",1002:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1002\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_xfer_wrcmd_order(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_xfer_wrcmd_order_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets wrcmd_order of the slave write driver.</div></div>",1003:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1003\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_xfer_wrcmd_order_t get_xfer_wrcmd_order()</div><div class=\"TTSummary\">Returns wrcmd_order of the slave write driver.</div></div>",1004:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1004\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_inbound_fifo_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets inbound_fifo_depth of the slave write driver.</div></div>",1005:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1005\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_inbound_fifo_depth()</div><div class=\"TTSummary\">Returns inbound_fifo_depth of the slave write driver.</div></div>",1006:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1006\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_boolean_t is_driver_idle()</div><div class=\"TTSummary\">Returns TRUE if the slave write driver is idle, else FALSE</div></div>",1097:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1097\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_awaddr_watchdog_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_depth</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets awaddr_watchdog_delay of the slave write driver. awaddr_watchdog_delay is for the driver to wait a certain number of cycles for wready/wvalid handshake occurs before it times out.</div></div>",1008:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1008\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_awaddr_watchdog_delay()</div><div class=\"TTSummary\">Returns awaddr_watchdog_delay of the slave write driver</div></div>",1009:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1009\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_adjust_response_delay_enabled()</div><div class=\"TTSummary\">Returns the current state of adjust_response_delay_enabled of the slave write driver.</div></div>",1010:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1010\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_adjust_response_delay_enabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_boolean_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of adjust_response_delay_enabled of the slave write driver.</div></div>",1011:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1011\" class=\"NDPrototype NoParameterForm\">task run_phase()</div><div class=\"TTSummary\">Start control processes for operation of slave write driver.</div></div>",1012:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1012\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_phase()</div><div class=\"TTSummary\">Stops all control processes of slave write driver.</div></div>",1013:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1013\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task get_wr_reactive (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">transfer</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns write reactive transaction.The slave VIP agent gets write transaction information,fill in response and send it back to Slave VIP interface.The usage of this API is shown below and it MUST be put in initial, forever procedure since get_wr_reactive is blocking, so does send. Please refer example design simset sim_allconfig for more details.</div></div>",1014:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1014\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_transaction create_transaction (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_transaction&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns an AXI transaction class that has been &quot;newed&quot;</div></div>",1106:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1106\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send_wready(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the ready structure to the slave write driver for controlling the WREADY channel, the wready policy will stay the same till the driver gets a new ready policy.</div></div>",1016:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1016\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_ready_gen create_ready (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_ready&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns a ready class that has been &quot;newed&quot;.</div></div>",1342:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1342\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send_awready(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the ready structure to the slave write driver for controlling the AWREADY channel, the awready policy will stay the same till the driver gets a new ready policy.</div></div>",1018:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1018\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the AXI transaction to the slave write driver</div></div>",1019:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1019\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task wait_rsp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This blocking function will not return until slave write driver send back response transaction.</div></div>"});