NDSummary.OnToolTipsLoaded("File:axi_vip_pkg.sv",{353:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">The package is systemverilog package for XILINX AXI Verification Component IP, it includes all the classes,enums, typedefs etc. XILINX AXI Verification Component IP has been developed to support the simulation of customer designed AXI-based IP. The AXI VIP core supports three versions of the AXI protocol (AXI4, AXI3 and AXI4Lite).&nbsp; Please refer PG267 for more details about this IP.</div></div>",355:"<div class=\"NDToolTip TMacro LSystemverilog\"><div class=\"TTSummary\">Xilinx VIP macro for information which gives informative message when LEVEL is bigger than 300.&nbsp; Else, it is silent.</div></div>",356:"<div class=\"NDToolTip TMacro LSystemverilog\"><div class=\"TTSummary\">Xilinx VIP macro for warning which indicates a potential problem.</div></div>",357:"<div class=\"NDToolTip TMacro LSystemverilog\"><div class=\"TTSummary\">Xilinx VIP macro for error which indicates a real problem.Simulation continues subject to the configured message action.</div></div>",358:"<div class=\"NDToolTip TMacro LSystemverilog\"><div class=\"TTSummary\">Xilinx VIP macro for Fatal which indicates a problem from which simulation can not recover.simulation exits via $finish after a #0 delay.</div></div>",359:"<div class=\"NDToolTip TMacro LSystemverilog\"><div class=\"TTSummary\">Macro for AXI VIP\'s Model parameters order.&nbsp; AXI VIP model parameters are related to user parameters as listed below:</div></div>",361:"<div class=\"NDToolTip TParameter LSystemverilog\"><div class=\"TTSummary\">parameter of xilinx AXI VIP maximum data width</div></div>",362:"<div class=\"NDToolTip TParameter LSystemverilog\"><div class=\"TTSummary\">parameter of xilinx AXI VIP maximum user beat width</div></div>",363:"<div class=\"NDToolTip TParameter LSystemverilog\"><div class=\"TTSummary\">parameter of xilinx AXI VIP verbosity none- Report is not printed</div></div>",364:"<div class=\"NDToolTip TParameter LSystemverilog\"><div class=\"TTSummary\">parameter of xilinx AXI VIP verbosity full- Report is always printed</div></div>",366:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx VIP Interger unsigned data type</div></div>",367:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx VIP verbosity data type</div></div>",368:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP int data type</div></div>",369:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP longint data type</div></div>",370:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP Interger unsigned data type</div></div>",371:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP longint unsigned data type</div></div>",372:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP payload byte data type</div></div>",373:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP strb 1 byte data type</div></div>",374:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP User beat data type</div></div>",375:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP data beat data type</div></div>",376:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP Strobe beat data type</div></div>",377:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP user element data type</div></div>",378:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP transaction Length data type</div></div>",379:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP transaction Cache data type</div></div>",380:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP transaction Prot data type</div></div>",381:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP transaction Region data type</div></div>",382:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP transaction QOS data type</div></div>",383:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Policies used by the memory model when it is determining what operation to perform when it encounters an empty entry. It can fill in the memory model with some fixed default value( user has to set this value through set_default_value_memory_value) or randomly generated value.</div></div>",384:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Policies used by the memory model te determine how to insert inter-beat gaps.</div></div>",385:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Definitions of the AXI AxSIZE values in a transaction.</div></div>",386:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Definitions of the AXI AxLOCK values which defines access type of transaction.</div></div>",387:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Definitions of the AXI BRESP and RRESP values of transaction.</div></div>",388:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Definitions of the AXI AxBURST values of transaction.</div></div>",389:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Enumeration of the possible transaction direction from the perspective of the master.</div></div>",390:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Policies of the transaction to inform the driver whether to return the transaction back to the issuer Depending on the policy the driver will return the transaction a different points in the life of the transaction</div></div>",391:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">This policy type informs the driver if the driver can re-order transactions that it is still processing.&nbsp; For READ transactions, the driver can return the RDATA beats from different RID\'s in a different order than they were received.&nbsp; For WRITE transactions, the driver uses this policy to determine if it can return BRESP\'s in a different order than they were received.</div></div>",392:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Collection of policies that describe how the xREADY signals will behave. These policies can introduce backpressure into the system to find design faults, refer PG267 section about READY Generation for more details.</div></div>",393:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Collection of policies that describe how the xREADY signals will behave when xil_axi_ready_gen_policy is XIL_AXI_READY_GEN_RANDOM.&nbsp; refer PG267 section about READY Generation for more details.</div></div>",394:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Xilinx AXI VIP Boolean data type</div></div>",395:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">When VIF driver is in idle mode, possible signals that can be driven on VIF</div></div>",396:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Diffferent data pattern of transaction.</div></div>",397:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">The order between write command and write data</div></div>",398:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">AXI transaction write data insertion delay policy</div></div>",399:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">AXI protocol version type</div></div>",400:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Pattern of filling in data into transacation</div></div>",401:"<div class=\"NDToolTip TType LSystemverilog\"><div class=\"TTSummary\">Pattern of filling in strobe into transaction</div></div>",403:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype403\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> automatic xil_axi_uint xil_clog2(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the base 2 logarithm of input</div></div>",404:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype404\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> automatic xil_axi_ulong xil_pow2(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the base 2 power of input</div></div>",405:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype405\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> xil_axi_ulong aligned_size_mask(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns inverted value of the base 2 power of size</div></div>",406:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype406\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_ulong aligned_4k_mask()</div><div class=\"TTSummary\">Returns inverted value of the base 2 power of 12</div></div>",407:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype407\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> xil_axi_size_t convert_dw_to_axi_size(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">dw</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Convert Data width to AXI size value</div></div>",408:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype408\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_void</div></div></div><div class=\"TTSummary\">The xil_void class is the base class for all Xilinx Verification Component classes.&nbsp; It is an abstract class with no data memebers or functions.</div></div>",409:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype409\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_object</div></div></div><div class=\"TTSummary\">The xil_object class is the base class for all Xilinx Verification Component data and hierarchical classes. Its primary role is to define a set of methods for common operations such as set name, verbosity, tag etc.</div></div>",411:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype411\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_xil_object&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new xil_object.~name~ is the name of the instance.</div></div>",412:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype412\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function string</span> get_name()</div><div class=\"TTSummary\">Returns the name of xil_object.</div></div>",413:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype413\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function string</span> get_full_name()</div><div class=\"TTSummary\">Returns the name of xil_object.</div></div>",414:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype414\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_name(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">n</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the name of xil_object to be n.</div></div>",415:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype415\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function int</span> get_inst_id()</div><div class=\"TTSummary\">Returns m_inst_id of xil_object.</div></div>",416:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype416\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_verbosity(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_verbosity&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the verbosity of debug information which will be printed in xil_object.</div></div>",417:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype417\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_verbosity get_verbosity()</div><div class=\"TTSummary\">Returns the current value of verbosity of xil_object.</div></div>",418:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype418\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_tag(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the name/TAG of the xil_object.</div></div>",419:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype419\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_tag()</div><div class=\"TTSummary\">Gets the name/TAG of the xil_object.</div></div>",420:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype420\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_is_active()</div><div class=\"TTSummary\">Sets is_active to be 1 and xil_object is in active state.</div></div>",421:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype421\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_is_active()</div><div class=\"TTSummary\">Sets is_active to be 0 and xil_object is in not active state.</div></div>",422:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype422\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit get_is_active()</div><div class=\"TTSummary\">Returns the is_active value of xil_object. A value of 1 is considered active.</div></div>",423:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype423\" class=\"NDPrototype NoParameterForm\">task wait_enabled()</div><div class=\"TTSummary\">Wait until is_active is high of xil_object.</div></div>",424:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype424\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_reporter</div></div></div><div class=\"TTSummary\">The xil_reporter class is a class which extends from xil_object and add its own get_type_name function</div></div>",426:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype426\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_xil_reporter&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new xil_reporter. ~name~ is the name of the instance.</div></div>",427:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype427\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_type_name()</div><div class=\"TTSummary\">Returns name of xil_reporter.</div></div>",428:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype428\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_component</div></div></div><div class=\"TTSummary\">The xil_componennt class is a class which extends from xil_reporter and added its own new and get_type_name function</div></div>",430:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype430\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_xil_component&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new xil_component and assign its name to type_name. ~name~ is the name of the instance.</div></div>",431:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype431\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_type_name()</div><div class=\"TTSummary\">Returns type_name of xil_component.</div></div>",432:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype432\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_agent</div></div></div><div class=\"TTSummary\">The xil_agent class is a class which extends from xil_component.</div></div>",434:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype434\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_xil_agent&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new xil_agent. ~name~ is the name of the instance.</div></div>",435:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype435\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_sequence_item</div></div></div><div class=\"TTSummary\">The xil_sequence_item is a class which extends from xil_object.</div></div>",437:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype437\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_type_name()</div><div class=\"TTSummary\">Returns string of &quot;xil_sequence_item&quot;.It is virtual function which will be overwritten later in its extended classes.</div></div>",438:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype438\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> convert2string()</div><div class=\"TTSummary\">Returns empty string. It is virtual function which will be overwritten later in its extended classes.</div></div>",439:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype439\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_analysis_port</div></div></div><div class=\"TTSummary\">The xil_analysis_port is a parameterized class which extends from xil_component</div></div>",441:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype441\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_xil_analysis_port&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new xil_analysis_port. ~name~ is the name of the instance.</div></div>",442:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype442\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> set_enabled()</div><div class=\"TTSummary\">Set enabled value to 1, xil_analysis_port is on.</div></div>",443:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype443\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> clr_enabled()</div><div class=\"TTSummary\">Set enabled to be 0, xil_analysis_port is off.</div></div>",444:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype444\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> logic get_enabled()</div><div class=\"TTSummary\">Returns enabled value of xil_analysis_port.</div></div>",445:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype445\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function integer unsigned</span> get_item_cnt()</div><div class=\"TTSummary\">Returns item_cnt of xil_analysis_port.</div></div>",446:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype446\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task write(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">T&nbsp;</td><td class=\"PName last\">trans</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">When xil_analysis_port is enabled,this function will push input argument into the queue of xil_analysis_port, increment item_cnt.</div></div>",447:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype447\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task <span class=\"SHKeyword\">get</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">T&nbsp;</td><td class=\"PName last\">trans</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">When xil_analysis_port is enabled,this function will get its output from the queue of xil_analysis_port, decrement item_cnt.Else, it will get fatal error message about attempting to get from disabled anaylysis port.</div></div>",448:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype448\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_sqr_if_base</div></div></div><div class=\"TTSummary\">xil_sqr_if_base is a base class which provides the interfaces necessary in order to receive or send sequence items and/or other sequences. xil_sqr_if_base #(T1, T2)</div></div>",450:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype450\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_name(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">in</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the name of the xil_sqr_if_base.</div></div>",451:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype451\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function string</span> get_name()</div><div class=\"TTSummary\">Return the name of the xil_sqr_if_base .</div></div>",452:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype452\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_max_item_cnt(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input <span class=\"SHKeyword\">integer</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">unsigned</span>&nbsp;</td><td class=\"PName last\">in</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the number of concurrent connections to the same inbound/output sequence port.</div></div>",453:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype453\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function integer unsigned</span> get_max_item_cnt()</div><div class=\"TTSummary\">Return the number of concurrent connections to the same inbound/output sequence port.</div></div>",454:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype454\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task get_next_item(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">T1&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Pop out sequence item from item queue of xil_sqr_if_base when item queue is not empty. It is a block task until there is item in the queue.</div></div>",455:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype455\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> try_next_item(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">T1&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Pop out sequence item from item queue of xil_sqr_if_base when item queue is not empty,othewise it returns a null object.It is a non-block task</div></div>",456:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype456\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task wait_for_item_done(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">transaction_id&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">-1</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">When item_done_cnt of xil_sqr_if_base is not zero, item_done_cnt decrements. it is a block task.</div></div>",457:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype457\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_uint item_done(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">T1&nbsp;</td><td class=\"PName\">t&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">null</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Give error message about attempting to double pop the item_done queue,and returns 1 while item_inflight_cnt of xil_sqr_if_base is zero.&nbsp; Else it increments item_done_cnt of xil_sqr_if_base and return 0.</div></div>",458:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype458\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_uint put_item(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">T1&nbsp;</td><td class=\"PName\">t&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">null</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Give error message about FIFO is overfilled when item_cnt is bigger than max_item_cnt of xil_sqr_if_base and returns 1. Else it push the item into item queue, increment item_cnt and returns 0.</div></div>",459:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype459\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task get_next_rsp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">T2&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Pop out response item from resonse item queue of xil_sqr_if_base when response queue is not empty. It is a block task until there is response item in the queue.</div></div>",460:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype460\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> try_next_rsp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">T2&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Pop out response item from item queue of xil_sqr_if_base when response queue is not empty,othewise it returns a null object.It is a non-block task</div></div>",461:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype461\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task wait_for_rsp_done(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">transaction_id&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">-1</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">When rsp_done_cnt of xil_sqr_if_base is not zero, rsp_done_cnt decrements. it is a block task.</div></div>",462:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype462\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_uint rsp_done(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">T2&nbsp;</td><td class=\"PName\">t&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">null</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Give error message about attempting to double pop the rsp_done queue and returns 1 when rsp_inflight_cnt is zero. Else, it will increment rsp_done_cnt, decrement rsp_inflight_cnt and returns 0.</div></div>",463:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype463\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_uint put_rsp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">T2&nbsp;</td><td class=\"PName\">t&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">null</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Give error message about response FIFO has overfilled and returns 1 when rsp_cnt is bigger than max_item_cnt. Else, it will put response item into rsp_q of xil_sqr_if_base, increment rsp_cnt and return 0.</div></div>",464:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype464\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_seq_item_pull_port</div></div></div><div class=\"TTSummary\">The xil_seq_item_pull_port#(REQ,RSP) class is extends from xil_sqr_if_base. It inherits all these variables and functions of xil_sqr_if_base.</div></div>",466:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype466\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_xil_seq_item_pull_port&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new instance of xil_seq_item_pull_port,~name~ is the name of the instance.</div></div>",467:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype467\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_driver</div></div></div><div class=\"TTSummary\">The xil_driver#(REQ, RSP) class is parameterized class which extends from xil_component.It is the base class of all xilinx VIP\'s driver class. It has one port which is seq_item_port</div></div>",469:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">xil_seq_item_pull_port #(REQ, RSP) seq_item_port;&nbsp; provides the method to send transactions to the driver.</div></div>",471:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype471\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_xil_driver&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates and initializes an instance of this class using the normal constructor arguments for xil_component, ~name~ is the name of the instance, create an instance of seq_item_port.</div></div>",472:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype472\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_type_name ()</div><div class=\"TTSummary\">Returns type_name of xil_driver.</div></div>",473:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype473\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_monitor</div></div></div><div class=\"TTSummary\">The xil_monitor extends from xil_component, It is the base class of all xilinx VIP\'s monitor class</div></div>",475:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype475\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_xil_monitor&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new &lt;xil_monitor&gt;.~name~ is the name of the instance.</div></div>",476:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype476\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_axi_channel_beat_base</div></div></div><div class=\"TTSummary\">XIL AXI Channel Beat Base class, single bus beat for the Write Channel.&nbsp; It inherits all the methods of xil_sequence_item</div></div>",478:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype478\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_xil_axi_channel_beat_base&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new xil_axi_channel_beat_base. ~name~ is the name of the instance.</div></div>",479:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype479\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> trigger_accepted(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">time&nbsp;</td><td class=\"PName last\">now,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">now_cycle&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets accepted and accepted_cycle of xil_axi_channel_beat_base</div></div>",480:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype480\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> time get_accepted_time()</div><div class=\"TTSummary\">Returns accepted of xil_axi_channel_beat_base</div></div>",481:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype481\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_ulong get_accepted_cycle()</div><div class=\"TTSummary\">Returns accepted_cycle of xil_axi_channel_beat_base</div></div>",482:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype482\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_axi_data_channel_beat_base</div></div></div><div class=\"TTSummary\">XIL AXI data channel beat base object, it inherits all the methods and member from xil_axi_channel_beat_base</div></div>",484:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype484\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_xil_axi_data_channel_beat_base&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new xil_axi_data_channel_beat_base.</div></div>",485:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype485\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_user(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">width,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_user_beat&nbsp;</td><td class=\"PName last\">in</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets user of the xil_axi_data_channel_beat_base.</div></div>",486:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype486\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_user_beat get_user()</div><div class=\"TTSummary\">Returns the user of the xil_axi_data_channel_beat_base.</div></div>",487:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype487\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_user_size(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets user size of the xil_axi_data_channel_beat_base.</div></div>",488:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype488\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_user_size()</div><div class=\"TTSummary\">Returns user size of the xil_axi_data_channel_beat_base.</div></div>",489:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype489\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_axi_write_beat</div></div></div><div class=\"TTSummary\">XIL AXI write beat class, it inherits all the methods and members of&nbsp; xil_axi_data_channel_beat_base</div></div>",491:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype491\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;xil_axi_write_beat&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new xil_axi_write_beat. ~name~ is the name of the instance.</div></div>",492:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype492\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_data_size(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the data size of the xil_axi_write_beat.</div></div>",493:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype493\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_data_size()</div><div class=\"TTSummary\">Returns the data size of the xil_axi_write_beat.</div></div>",494:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype494\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_strb_size(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the strobe size of the xil_axi_write_beat.</div></div>",495:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype495\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_strb_size()</div><div class=\"TTSummary\">Returns the strobe size of the xil_axi_write_beat.</div></div>",496:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype496\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> copy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_write_beat&nbsp;</td><td class=\"PName last\">rhs</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Copies the contents of the input xil_axi_write_beat to the current xil_axi_write_beat.</div></div>",497:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype497\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_write_beat my_clone()</div><div class=\"TTSummary\">Clones the current xil_axi_write_beat and returns a handle to the new xil_axi_write_beat.</div></div>",498:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype498\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> convert2string()</div><div class=\"TTSummary\">Returns string with last,data,size and user info of the xil_axi_write_beat.</div></div>",499:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype499\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> trigger_data_beat_accepted(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">time&nbsp;</td><td class=\"PName last\">trigger_time,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">trigger_cycle,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">time&nbsp;</td><td class=\"PName last\">ready_time,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">time&nbsp;</td><td class=\"PName last\">valid_time,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">ready_cycle,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">valid_cycle&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets write beat characterics of data_beat_accepted,data_ready_assert_time, data_valid_assert_time,data_ready_assert_cycle,data_valid_assert_cycle,data_beat_accepted_cycles,</div></div>",500:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype500\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_axi_resp_beat</div></div></div><div class=\"TTSummary\">XIL AXI RESP beat class. Single bus beat for the RESP channel. It inherits all the member and methods of xil_axidata_channel_beat_base.</div></div>",502:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype502\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;xil_axi_resp_beat&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new xil_axi_resp_beat. ~name~ is the name of the instance.</div></div>",503:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype503\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_axi_read_beat</div></div></div><div class=\"TTSummary\">XIL AXI read beat class. Single bus beat for the READ channel. It inherits all the member and methods of xil_axi_resp_beat.</div></div>",505:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype505\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;xil_axi_read_beat&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new xil_axi_read_beat. ~name~ is the name of the instance.</div></div>",506:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype506\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_data_size(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the data size of the xil_axi_read_beat.</div></div>",507:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype507\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_data_size()</div><div class=\"TTSummary\">Returns the data size of the xil_axi_read_beat.</div></div>",508:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype508\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> copy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_read_beat&nbsp;</td><td class=\"PName last\">rhs</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Copies the contents of the input xil_axi_read_beat to the current xil_axi_read_beat.</div></div>",509:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype509\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_read_beat my_clone()</div><div class=\"TTSummary\">Clones the current xil_axi_read_beat and returns a handle to the new xil_axi_read_beat.</div></div>",510:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype510\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> convert2string()</div><div class=\"TTSummary\">Returns string with last,data,size and user information of xil_axi_read_beat.</div></div>",511:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype511\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_axi_cmd_beat</div></div></div><div class=\"TTSummary\">XIL AXI cmd beat class. Single bus beat for the CMD channel, it inherits all the member and methods of xil_axi_channel_beat_base</div></div>",513:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype513\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;xil_axi_cmd_beat&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new xil_axi_cmd_beat. ~name~ is the name of the instance.</div></div>",514:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype514\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> copy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_cmd_beat&nbsp;</td><td class=\"PName last\">rhs</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Copies the contents of the input xil_axi_cmd_beat to the current xil_axi_cmd_beat.</div></div>",515:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype515\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_cmd_beat my_clone()</div><div class=\"TTSummary\">Clones the current xil_axi_cmd_beat and returns a handle to the new xil_axi_cmd_beat.</div></div>",516:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype516\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> convert2string()</div><div class=\"TTSummary\">Returns string with direction name,addr,id,len,size and user information of the xil_axi_cmd_beat.</div></div>",517:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype517\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_user(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">width,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_user_beat&nbsp;</td><td class=\"PName last\">in</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets user of the xil_axi_cmd_beat.</div></div>",518:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype518\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_user_beat get_user()</div><div class=\"TTSummary\">Returns the user of the xil_axi_cmd_beat.</div></div>",519:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype519\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_transaction</div></div></div><div class=\"TTSummary\">The axi_transaction class is the base class of AXI protocol. It inherits all the methods of xil_sequence_item.</div></div>",521:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype521\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_transaction&quot;</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">protocol</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">addrw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">32</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">dataw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">32</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">idw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">awusrw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">wusrw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">busrw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">arusrw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">rusrw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">supports_narrow&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_burst&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_lock&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_cache&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_region&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_prot&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_qos&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_wstrb&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_bresp&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_rresp&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new axi_transaction. ~name~ is the name of the instance.</div></div>",522:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype522\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> copy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">axi_transaction&nbsp;</td><td class=\"PName last\">rhs</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Copies the contents of the input transaction to the current transaction</div></div>",523:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype523\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_type_name()</div><div class=\"TTSummary\">Returns the name of the class type</div></div>",524:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype524\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> axi_transaction my_clone ()</div><div class=\"TTSummary\">Clones the current transaction and returns a handle to the new transaction.</div></div>",525:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype525\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_protocol(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the protocol type of the transaction.</div></div>",526:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype526\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_adjust_response_delay_enabled()</div><div class=\"TTSummary\">Returns the current state of adjust_response_delay_enabled of the transaction.</div></div>",527:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype527\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_adjust_response_delay_enabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_boolean_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of adjust_response_delay_enabled of the transaction.</div></div>",528:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype528\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_adjust_addr_delay_enabled()</div><div class=\"TTSummary\">Returns the current state of adjust_addr_delay_enabled of the transaction.</div></div>",529:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype529\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_adjust_addr_delay_enabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_boolean_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of adjust_addr_delay_enabled of the transaction.</div></div>",530:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype530\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_adjust_data_beat_delay_enabled()</div><div class=\"TTSummary\">Returns the current state of adjust_data_beat_delay_enabled of the transaction.</div></div>",531:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype531\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_adjust_data_beat_delay_enabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_boolean_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of adjust_data_beat_delay_enabled of the transaction.</div></div>",532:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype532\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_supports_narrow(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of supports_narrow of the transaction. Internal use only</div></div>",533:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype533\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_has_burst(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of has_burst of the transaction. Internal use only</div></div>",534:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype534\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_has_lock(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of has_lock of the transaction. Internal use only</div></div>",535:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype535\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_has_cache(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of has_cache of the transaction.Internal use only</div></div>",536:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype536\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_has_region(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of has_region of the transaction.Internal use only</div></div>",537:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype537\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_has_prot(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of has_prot of the transaction.Internal use only</div></div>",538:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype538\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_has_qos(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of has_qos of the transaction. Internal use only</div></div>",539:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype539\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_has_wstrb(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of has_wstrb of the transaction. Internal use only</div></div>",540:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype540\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_has_bresp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of has_bresp of the transaction. Internal use only</div></div>",541:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype541\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_has_rresp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of has_rresp of the transaction. Internal use only</div></div>",542:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype542\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_supports_narrow()</div><div class=\"TTSummary\">Returns the value of supports_narrow of the transaction.</div></div>",543:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype543\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_has_burst()</div><div class=\"TTSummary\">Returns the value of has_burst of the transaction.</div></div>",544:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype544\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_has_lock()</div><div class=\"TTSummary\">Returns the value of has_lock of the transaction.</div></div>",545:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype545\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_has_cache()</div><div class=\"TTSummary\">Returns the value of has_cache of the transaction.</div></div>",546:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype546\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_has_region()</div><div class=\"TTSummary\">Returns the value of has_region of the transaction.</div></div>",547:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype547\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_has_prot()</div><div class=\"TTSummary\">Returns the value of has_prot of the transaction.</div></div>",548:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype548\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_has_qos()</div><div class=\"TTSummary\">Returns the value of has_qos of the transaction.</div></div>",549:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype549\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_has_wstrb()</div><div class=\"TTSummary\">Returns the value of has_wstrb of the transaction.</div></div>",550:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype550\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_has_bresp()</div><div class=\"TTSummary\">Returns the value of has_bresp of the transaction.</div></div>",551:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype551\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_has_rresp()</div><div class=\"TTSummary\">Returns the value of has_rresp of the transaction.</div></div>",552:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype552\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_protocol()</div><div class=\"TTSummary\">Returns the value of protocol type of the transaction.</div></div>",553:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype553\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_addr_width(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of address width of the transaction. Internal use only</div></div>",554:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype554\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_addr_width()</div><div class=\"TTSummary\">Returns the value of address width of the transaction.</div></div>",555:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype555\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_data_width(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of WDATA/RDATA width of the transaction. Internal use only</div></div>",556:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype556\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_data_width()</div><div class=\"TTSummary\">Returns the value of WDATA/RDATA width of the transaction.</div></div>",557:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype557\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_id_width(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of ID width of the transaction. Internal use only</div></div>",558:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype558\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_id_width()</div><div class=\"TTSummary\">Returns the value of ID width of the transaction.</div></div>",559:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype559\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_awuser_width(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of AWUSER width of the transaction.Internal use only</div></div>",560:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype560\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_awuser_width()</div><div class=\"TTSummary\">Returns the value of AWUSER width of the transaction.</div></div>",561:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype561\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_wuser_width(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of WUSER width of the transaction. Internal use only</div></div>",562:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype562\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_wuser_width()</div><div class=\"TTSummary\">Returns the value of WUSER width of the transaction.</div></div>",563:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype563\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_buser_width(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of BUSER width of the transaction.Internal use only</div></div>",564:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype564\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_buser_width()</div><div class=\"TTSummary\">Returns the value of BISER width of the transaction.</div></div>",565:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype565\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_aruser_width(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of ARUSER width of the transaction. Internal use only</div></div>",566:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype566\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_aruser_width()</div><div class=\"TTSummary\">Returns the value of ARUSER width of the transaction.</div></div>",567:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype567\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_ruser_width(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of RUSER width of the transaction. Internal use only</div></div>",568:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype568\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_ruser_width()</div><div class=\"TTSummary\">Returns the value of RUSER width of the transaction.</div></div>",569:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype569\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_vif_axi_version_t get_axi_version()</div><div class=\"TTSummary\">Returns the value of AXI version of the transaction.</div></div>",570:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype570\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_axi_version(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_vif_axi_version_t&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of AXI VERSION of the transaction. Internal use only</div></div>",571:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype571\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_axi_version_name()</div><div class=\"TTSummary\">Returns the string name of the AXI version of the transaction.</div></div>",572:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype572\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_creation_time(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">time&nbsp;</td><td class=\"PName last\">in</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets creation_time of the transaction. It is the time when the transaction is being created.</div></div>",573:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype573\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> time get_creation_time()</div><div class=\"TTSummary\">Returns creation_time of the transaction.</div></div>",574:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype574\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> cmd_convert2string()</div><div class=\"TTSummary\">Returns the string of the AXI basic command properties. This is debugging tool to observe the transaction.</div></div>",575:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype575\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> cmd_sprintf()</div><div class=\"TTSummary\">Returns the string of the AXI basic command properties. This is debugging tool to observe the transaction.</div></div>",576:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype576\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> convert2string()</div><div class=\"TTSummary\">Returns the string of the AXI transaction. This is debugging tool to observe the transaction.</div></div>",577:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype577\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_submit_time(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">time&nbsp;</td><td class=\"PName last\">in</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sumbit_time of the transaction.&nbsp; to be removed</div></div>",578:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype578\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> time get_submit_time()</div><div class=\"TTSummary\">Gets the submit_time of the transaction.&nbsp; to be removed</div></div>",579:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype579\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_submit_cycle(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">in</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sumbit_cycle of the transaction.</div></div>",580:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype580\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_ulong get_submit_cycle()</div><div class=\"TTSummary\">Gets the submit_cycle of the transaction.</div></div>",581:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype581\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> get_region_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_region_t&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_region_t&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the MIN/MAX values that are used to constrain the AxREGION value.</div></div>",582:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype582\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_region_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_region_t&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_region_t&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the MIN/MAX values that are used to constrain the AxREGION value. Internal use only</div></div>",583:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype583\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_num_bytes_in_transaction()</div><div class=\"TTSummary\">Returns the number of bytes of DATA in the transaction based on the current properties of the transaction.&nbsp; It equals to (length +1) *&nbsp; size(in bytes)</div></div>",584:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype584\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_read_cmd(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName\">addr,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName\">burst&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">XIL_AXI_BURST_TYPE_INCR,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">id&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName\">len&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName\">size&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">XIL_AXI_SIZE_4BYTE</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Helper function to set the most common READ command properties of the transaction.&nbsp; Address,burst type,length, and size can be set through this command.This API is being used for READ Command only.</div></div>",585:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype585\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_write_cmd(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName\">addr,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName\">burst&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">XIL_AXI_BURST_TYPE_INCR,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">id&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName\">len&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName\">size&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">XIL_AXI_SIZE_4BYTE</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Helper function to set the most common WRITE command properties of the transaction.&nbsp; It sets address, burst type, id, length and size of the WRITE transaction. This API can only be used for WRITE Command only.</div></div>",586:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype586\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_cmd(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cmd_t&nbsp;</td><td class=\"PName\">cmd,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName\">addr,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName\">burst&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">XIL_AXI_BURST_TYPE_INCR,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">id&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName\">len&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName\">size&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">XIL_AXI_SIZE_4BYTE</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Helper function to set the most common command properties of the transaction.&nbsp; It sets cmd type,address, burst type, id, length and size of the transaction,</div></div>",587:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype587\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_region_t get_region ()</div><div class=\"TTSummary\">Returns the value of AxREGION of the transaction.</div></div>",588:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype588\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_region (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_region_t&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of AxREGION of the transaction.</div></div>",589:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype589\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_qos_t get_qos ()</div><div class=\"TTSummary\">Returns the value of AxQOS of the transaction.</div></div>",590:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype590\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_qos (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_qos_t&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of AxQOS of the transaction.</div></div>",591:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype591\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_id ()</div><div class=\"TTSummary\">Returns the value of AxID/RID/BID of the transaction.</div></div>",592:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype592\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_id (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_id</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of AxID/RID/BID of the transaction.</div></div>",593:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype593\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_driver_return_item ()</div><div class=\"TTSummary\">Sets the driver_return_item property to XIL_AXI_PAYLOAD_RETURN of the transaction.</div></div>",594:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype594\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_driver_return_item_policy (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_driver_return_policy_t&nbsp;</td><td class=\"PName last\">set</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the driver_return_item property of the transaction.&nbsp; If user want to get the data back from driver, the driver_return_item has to be set to not&nbsp; XIL_AXI_NO_RETURN.</div></div>",595:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype595\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_driver_return_policy_t get_driver_return_item_policy ()</div><div class=\"TTSummary\">Returns the value of driver_return_item property of the transaction.</div></div>",596:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype596\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_ulong get_addr ()</div><div class=\"TTSummary\">Returns the value of AxADDR of the transaction. AxADDR here can be AWADDR or ARADDR</div></div>",597:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype597\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_addr (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of AxADDR of the transaction.&nbsp; AxADDR here can be AWADDR or ARADDR .If user accidently set the address out of range(0, 1&lt;&lt; this.get_addr_width() -1), a warning message will pop up and the address will be truncated to make sure it is in the address range.</div></div>",598:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype598\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_addr_offset()</div><div class=\"TTSummary\">Gets address offset of the transaction.&nbsp; to be removed</div></div>",599:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype599\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_cmd_id()</div><div class=\"TTSummary\">Returns the value of an ID field for the transaction. This can be used for tracking the transaction within the DRIVER or environment.</div></div>",600:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype600\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_cmd_t get_cmd_type()</div><div class=\"TTSummary\">Returns the command type (READ/WRITE) of the transaction.</div></div>",601:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype601\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_cmd_type(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cmd_t&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the command type (READ/WRITE) of the transaction.</div></div>",602:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype602\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_cmd_type_name()</div><div class=\"TTSummary\">Returns the string name of the command type of the transaction.</div></div>",603:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype603\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_len_t get_len()</div><div class=\"TTSummary\">Returns the value of AxLEN of the transaction. AxLEN can be ARLEN and AWLEN.</div></div>",604:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype604\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_len(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of AxLEN of the transaction,AxLEN can be ARLEN and AWLEN, A fatal DRC occurs when any of the following conditions occur:</div></div>",605:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype605\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_size_t get_size()</div><div class=\"TTSummary\">Returns the value of AxSIZE of the transaction, AxSIZE can be ARSIZE and AWSIZE.</div></div>",606:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype606\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_size_name()</div><div class=\"TTSummary\">Returns the string name of the value of AxSIZE of the transaction,AxSIZE can be ARSIZE and AWSIZE.</div></div>",607:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype607\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_size_t get_dw_size()</div><div class=\"TTSummary\">Helper function that will convert the data width value to AxSIZE and return the value,AxSIZE can be ARSIZE and AWSIZE.</div></div>",608:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype608\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_size(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of AxSIZE of the transaction,AxSIZE can be ARSIZE and AWSIZE.</div></div>",609:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype609\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_burst_t get_burst()</div><div class=\"TTSummary\">Returns the value of AxBURST of the transaction, AxBURST can be ARBURST and AWBURST.</div></div>",610:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype610\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_burst_name()</div><div class=\"TTSummary\">Returns the string name of the value of AxBURST of the transaction,AxBURST can be ARBURST and AWBURST.</div></div>",611:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype611\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_burst(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of AxBURST of the transaction,AxBURST can be ARBURST and AWBURST.&nbsp; When AXI VIP HAS_BURST is low, burst type can only be set to INCR, otherwise, FATAL DRC will be file.&nbsp; When AXI VIP HAS_BURST is high and it is AXI4LITE, burst type can only be set to INCR. otherwise, FATAL DRC will be file</div></div>",612:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype612\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_lock_t get_lock()</div><div class=\"TTSummary\">Returns the value of AxLOCK of the transaction,AxLOCK can be ARLOCK and AWLOCK.</div></div>",613:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype613\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_lock(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_lock_t&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of AxLOCK of the transaction,AxLOCK can be ARLOCK and AWLOCK.</div></div>",614:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype614\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_cache_t get_cache()</div><div class=\"TTSummary\">Returns the value of AxCACHE of the transaction,AxCACHE can be ARCACHE and AWCACHE.</div></div>",615:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype615\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_cache(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cache_t&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of AxCACHE of the transaction,AxCACHE can be ARCACHE and AWCACHE.</div></div>",616:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype616\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_prot_t get_prot()</div><div class=\"TTSummary\">Returns the value of AxPROT of the transaction,AxPROT can be ARPROT and AWPROT.</div></div>",617:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype617\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_prot(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of AxPROT of the transaction,AxPROT can be ARPROT and AWPROT.</div></div>",618:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype618\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_trans_state(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_trans_state_t&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets trans_state of the transaction.</div></div>",619:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype619\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_trans_state_t get_trans_state()</div><div class=\"TTSummary\">Returns trans_state of the transaction.</div></div>",620:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype620\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_user_beat get_awuser()</div><div class=\"TTSummary\">Returns the value of AWUSER of axi_transaction.</div></div>",621:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype621\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_awuser(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_user_beat&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of the AWUSER of axi_transaction.Warning will be poped out if user try to set awuser value which is out of range</div></div>",622:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype622\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_user_beat get_aruser()</div><div class=\"TTSummary\">Returns the value of the ARUSER of axi_transaction.</div></div>",623:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype623\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_aruser(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_user_beat&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of the ARUSER of axi_transaction. Warning will be poped out if user try to set aruser value which is out of range</div></div>",624:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype624\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_user_beat get_buser()</div><div class=\"TTSummary\">Returns the value of the BUSER of axi_transaction.</div></div>",625:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype625\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_buser(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_user_beat&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of the BUSER of the transaction.Warning will be poped out if user try to set buser value which is out of range</div></div>",626:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype626\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_beat_index()</div><div class=\"TTSummary\">Get current beat index of the axi_transaction.</div></div>",627:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype627\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> increment_beat_index()</div><div class=\"TTSummary\">Increment beat index of axi_transaction.</div></div>",628:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype628\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_beat_index()</div><div class=\"TTSummary\">Clear beat index of axi_transaction.</div></div>",629:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype629\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_addr_delay()</div><div class=\"TTSummary\">Returns the value of the address delay from the time command being recevied by write/read driver of master agent to the time the command being put on interface bus.-Refer PG267 AXI VIP Agent and Flow Methology about Write Command and Data Flow</div></div>",630:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype630\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_addr_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of the address delay from the time command being recevied by write/read driver of master agent to the time the command being put on interface bus. --Refer PG267 AXI VIP Agent and Flow Methology about Write Command and Data Flow</div></div>",631:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype631\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> adjust_data_insertion_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">now</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adjust data insertion delay of the transaction. This API is disabled when adjust_data_beat_delay_enabled is low, when it is high, it will be used to adjust the delay between the time when the command is to be processed and the time when the data is applied to the interface.</div></div>",632:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype632\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> adjust_addr_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">now</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adjust address delay of the transaction. This API is disabled when adjust_addr_delay_enabled is low, when it is high, it will be used to adjust the address delay of the transaction.</div></div>",633:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype633\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> adjust_response_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">now</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adjust the response delay of the transaction. This API is disabled when adjust_response_delay_enabled is low, when it is high, it will be used to adjust the response delay.</div></div>",634:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype634\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_data_insertion_delay()</div><div class=\"TTSummary\">Returns the transactions insertion delay value. This is the value from when the command is to be processed to when the data transfer is applied to the interface.--Refer PG267 AXI VIP Agent and Flow Methology about Write Command and Data Flow.</div></div>",635:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype635\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_data_insertion_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the transactions data insertion delay value, it is number of cycles. This is the delay from the time the command is processed to the time the data transfer is applied to the interface.--Refer PG267 AXI VIP Agent and Flow Methology about Write Command and Data Flow.</div></div>",636:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype636\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_response_delay()</div><div class=\"TTSummary\">Returns the number of cycles that the driver will wait before sending the response.Refer PG267 AXI VIP Agent and Flow Methology about Write Response/Reaction and Data Flow.</div></div>",637:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype637\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_response_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of cycles that the driver will wait before sending the response.</div></div>",638:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype638\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_allow_data_before_cmd()</div><div class=\"TTSummary\">Returns allow_data_before_cmd of the transaction. allow_data_before_cmd is the number of data beat in one transfer which is being written to interface data bus before command is being written.If it is zero, it means that command is being written before data.</div></div>",639:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype639\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_allow_data_before_cmd(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets allow_data_before_cmd of the transaction.allow_data_before_cmd is the number of data beat in one transfer which is being written to interface data bus before command is being written.If it is zero, it means that command is being written before data.</div></div>",640:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype640\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_xfer_preemptive_probability()</div><div class=\"TTSummary\">Gets xfer_preemptive_probability of the transaction.</div></div>",641:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype641\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_xfer_preemptive_probability(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets xfer_preemptive_probability of the transaction.</div></div>",642:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype642\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_resp_t get_bresp()</div><div class=\"TTSummary\">Returns the value of BRESP of the transaction.</div></div>",643:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype643\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_bresp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_resp_t&nbsp;</td><td class=\"PName last\">updated&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of BRESP of the transaction.</div></div>",644:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype644\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_bresp_name()</div><div class=\"TTSummary\">Gets bresp name of the transaction.</div></div>",645:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype645\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint is_bresp_okay()</div><div class=\"TTSummary\">Returns 1 if bresp of axi_transaction is XIL_AXI_RESP_OKAY, else returns 0</div></div>",646:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype646\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint is_bresp_slverr()</div><div class=\"TTSummary\">Returns 1 if bresp of axi_transaction is XIL_AXI_RESP_SLVERR, else returns 0</div></div>",647:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype647\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint is_bresp_decerr()</div><div class=\"TTSummary\">Returns 1 if bresp of axi_transaction is XIL_AXI_RESP_DECERR, else returns 0</div></div>",648:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype648\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint is_bresp_exokay()</div><div class=\"TTSummary\">Returns 1 if bresp of axi_transaction is XIL_AXI_RESP_EXOKAY, else returns 0</div></div>",649:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype649\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint all_rresp_okay()</div><div class=\"TTSummary\">Returns 1 if rresp of axi_transaction is XIL_AXI_RESP_OKAY, else returns 0</div></div>",650:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype650\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint all_rresp_exokay()</div><div class=\"TTSummary\">Returns 1 if rresp of axi_transaction is XIL_AXI_RESP_EXOKAY, else returns 0</div></div>",651:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype651\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint all_rresp_slverr()</div><div class=\"TTSummary\">Returns 1 if rresp of axi_transaction is XIL_AXI_RESP_SLVERR, else returns 0</div></div>",652:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype652\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint all_rresp_decerr()</div><div class=\"TTSummary\">Returns 1 if rresp of axi_transaction is XIL_AXI_RESP_DECERR, else returns 0</div></div>",653:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype653\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_beat_index_delay()</div><div class=\"TTSummary\">Returns the current beat delay of the transaction.</div></div>",654:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype654\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_beat_index_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the specified beat delay of the transaction.</div></div>",655:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype655\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_strb_beat_unpacked(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">bit&nbsp;</td><td class=\"PName last\">ret_strb[]&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the strobe of one beat of the transaction.</div></div>",656:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype656\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_data_beat_unpacked(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_payload_byte&nbsp;</td><td class=\"PName last\">ret_data[]&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the data of one beat in the transaction.</div></div>",657:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype657\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> get_data_beat_unpacked(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_payload_byte&nbsp;</td><td class=\"PName last\">ret_data[]&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the data of one beat in the transaction.</div></div>",658:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype658\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_all_resp_okay()</div><div class=\"TTSummary\">Sets all_resp_okay of the transaction to be true</div></div>",659:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype659\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_boolean_t get_all_resp_okay()</div><div class=\"TTSummary\">Returns all_resp_okay of the transaction.</div></div>",660:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype660\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_all_resp_okay()</div><div class=\"TTSummary\">Sets all_resp_okay of the transaction.</div></div>",661:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype661\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_exclude_resp_exokay()</div><div class=\"TTSummary\">Sets exclude_resp_exokay of the transaction to be true</div></div>",662:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype662\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_boolean_t get_exclude_resp_exokay()</div><div class=\"TTSummary\">Returns exclude_resp_exokay of the transaction.</div></div>",663:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype663\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_exclude_resp_exokay()</div><div class=\"TTSummary\">Sets exclude_resp_exokay of the transaction to be false</div></div>",664:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype664\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_xfer_alignment(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_xfer_alignment_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets xfer_alignent of the transaction. refer xil_axi_xfer_alignment_t for more details.</div></div>",665:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype665\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_xfer_alignment_t get_xfer_alignment()</div><div class=\"TTSummary\">Returns xfer_alignment of the transaction.</div></div>",666:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype666\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_xfer_wrcmd_order(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_xfer_wrcmd_order_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets xfer_wrcmd_order of the transaction.</div></div>",667:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype667\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_xfer_wrcmd_order_t get_xfer_wrcmd_order()</div><div class=\"TTSummary\">Gets xfer_wrcmd_order of the transaction.</div></div>",668:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype668\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_xfer_wrdata_insertion_policy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_xfer_wrdata_insertion_policy_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets xfer_wrdata_insertion_policy of the transaction.</div></div>",669:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype669\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_xfer_wrdata_insertion_policy_t get_xfer_wrdata_insertion_policy()</div><div class=\"TTSummary\">Gets xfer_wrdata_insertion_policy of the transaction.</div></div>",670:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype670\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> get_addr_delay_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns min_addr_delay and max_addr_delay of the transaction.</div></div>",671:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype671\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_addr_delay_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets min_addr_delay and max_addr_delay of the transaction.when transaction is randomized,addr_insertion_delay will be inside the range of min_addr_insertion_delay and max_addr_insertion_delay.</div></div>",672:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype672\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> get_data_insertion_delay_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns min_data_insertion_delay and max_data_insertion_delay of the transaction.</div></div>",673:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype673\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> get_response_delay_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns min_response_delay and max_response_delay of the transaction.</div></div>",674:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype674\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_data_insertion_delay_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets min_data_insertion_delay and max_data_insertion_delay of the transaction.when transaction is randomized,data_insertion_delay will be inside the range of min_data_insertion_delay and max_data_insertion_delay.</div></div>",675:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype675\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_response_delay_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets min_response_delay and max_response_delay of the transaction.when transaction is randomized,response_delay will be inside the range of min_response_delay and max_response_delay.</div></div>",676:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype676\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> get_allow_data_before_cmd_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns min_allow_data_before_cmd and max_allow_data_before_cmd of the transaction.</div></div>",677:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype677\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_allow_data_before_cmd_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets min_allow_data_before_cmd and max_allow_data_before_cmd of the transaction.when transaction is randomized, allow_data_before_cmd&nbsp; will be inside the range of min_allow_data_before_cmd and max_allow_data_before_cmd.</div></div>",678:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype678\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> get_beat_delay_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns min_beat_delay and max_beat_delay of the transaction.</div></div>",679:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype679\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_beat_delay_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets min_beat_delay and max_beat_delay of the transaction. when transaction is randomized,beat_delay will be inside the range of min_beat_delay and max_beat_delay.</div></div>",680:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype680\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_report_errors_number()</div><div class=\"TTSummary\">Returns report_errors_number of the transaction.</div></div>",681:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype681\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_report_errors_number(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets report_errors_number of the transaction. report_errors_number is being used to decide maximum number of&nbsp; miscomparsion error messages about data beat,rresp,ruser,wuser will be printed out when API do_compare is being called.</div></div>",682:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype682\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_burst_byte_offset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns burst byte offset of beat(index) of the transaction. It is being used to calculate burst byte offset.</div></div>",683:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype683\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_transfer_byte_count()</div><div class=\"TTSummary\">Returns total number of bytes of one transfer. It equals to transfer.size * (transfer.len+1)</div></div>",684:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype684\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_strb_array()</div><div class=\"TTSummary\">Sets all strobe bits of the transaction to 0</div></div>",685:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype685\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_strb_array()</div><div class=\"TTSummary\">Sets all strobe bits of the transaction to 1</div></div>",686:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype686\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_data_array()</div><div class=\"TTSummary\">Sets data to unknown and strobe to be unknown for write transaction</div></div>",687:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype687\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> size_wr_beats()</div><div class=\"TTSummary\">Sets data,strobe and wuser(if WUSER_WIDTH&gt;0),beat_delay of write transaction</div></div>",688:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype688\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> size_rd_beats()</div><div class=\"TTSummary\">Sets data,rresp and ruser(if RUSER_WIDTH&gt;0),beat_delay of read transaction</div></div>",689:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype689\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> adjust_head_strb()</div><div class=\"TTSummary\">Adjust strobe bit of unaligned head of the transaction to be 0</div></div>",690:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype690\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> post_randomize()</div><div class=\"TTSummary\">Sets final value of region,prot,qos,cache,address,bresp,rresp,strobe of transaction to be removed</div></div>",691:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype691\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_beat_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Assign the inter-beat delay of the specified beat.</div></div>",692:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype692\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_beat_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the inter-beat delay of the specified beat.</div></div>",693:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype693\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_data_beat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">index,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_data_beat&nbsp;</td><td class=\"PName\">new_data,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">new_beat_delay&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_strb_beat&nbsp;</td><td class=\"PName\">new_strb&nbsp;</td><td></td><td class=\"last\"></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Convenience function that will assign the value of the specified beat. it will set the assigned index data and strobe information, default strb is {128{1\'b1}} .</div></div>",694:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype694\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_data_block(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">4096</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">block&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Convenience function that will assign the data payload for the complete transaction. The maximum of one transactin is 4k Bytes and that is why the input of this API is 8*4096 bits.&nbsp; According to the transaction length and size, this API will just take what is needed to fill the data of the transaction.</div></div>",695:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype695\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_strb_beat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_strb_beat&nbsp;</td><td class=\"PName last\">new_strb&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Convenience function that will assign the value STRB of the specified beat, default strb is {128{1\'b1}}.</div></div>",696:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype696\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_axi_data_beat get_data_beat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the value of the specified beat. This is NOT always the RDATA/WDATA representation.&nbsp; It will align the signification bytes to the lower bytes and set the unused bytes to zeros.</div></div>",697:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype697\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit [<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">4096</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>] get_data_block()</div><div class=\"TTSummary\">Returns the 4K bytes of the payload for the transaction. This is NOT always the RDATA/WDATA representation.&nbsp; It will align the signification bytes to the lower bytes and set the unused bytes to zeros.</div></div>",698:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype698\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_axi_strb_beat get_strb_beat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the value of the specified beat. This is NOT always the WSTRB representation.&nbsp; It will align the signification strobes to the lower bytes and set the unused strobes to zeros.</div></div>",699:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype699\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_user_beat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_user_beat&nbsp;</td><td class=\"PName last\">updated&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets user value of the specified beat.</div></div>",700:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype700\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_ruser(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_user_beat&nbsp;</td><td class=\"PName last\">updated&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of the RUSER for the specified beat.</div></div>",701:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype701\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_wuser(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_user_beat&nbsp;</td><td class=\"PName last\">updated&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of the WUSER for the specified beat.</div></div>",702:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype702\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_rresp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_resp_t&nbsp;</td><td class=\"PName last\">resp</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of the RRESP for the specified beat.</div></div>",703:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype703\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_axi_resp_t get_rresp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the value of the RRESP for the specified beat.</div></div>",704:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype704\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function string</span> get_rresp_name(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the name of the RRESP for the specified beat.</div></div>",705:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype705\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_axi_user_beat get_user_beat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the value of the xUSER beat at the index provided of the transaction. xUSER here can be WUSER/RUSER.</div></div>",706:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype706\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_axi_user_beat get_wuser(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the value of the WUSER for the specified beat.</div></div>",707:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype707\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_axi_user_beat get_ruser(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">index</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the value of the RUSER for the specified beat.</div></div>",708:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype708\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_ulong convert_addr_wrap_to_incr()</div><div class=\"TTSummary\">Returns the INCR address of the WRAP transaction. The returned INCR address will be aligned to the AxSIZE of the transaction.</div></div>",709:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype709\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> axi_transaction convert_wrap_to_incr()</div><div class=\"TTSummary\">Returns an axi_transaction based on the current transaction, however, converts the WRAP to INCR byte order.&nbsp; This function will change the resultant INCR transaction address to be aligned.</div></div>",710:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype710\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_transaction convert_incr_to_wrap(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">10</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">wrap_offset&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns an axi_transaction based on the current transaction, however, converts the INCR to WRAP byte order.&nbsp; This function requires the WRAP offset to correctly return the target word.</div></div>",711:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype711\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> import_data_beat_fields(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">inout</span>&nbsp;</td><td class=\"PType\">xil_axi_write_beat&nbsp;</td><td class=\"PName last\">write_beat&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets data,strobe,wuser of write beat to be removed</div></div>",712:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype712\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> import_cmd_fields (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">inout</span>&nbsp;</td><td class=\"PType\">xil_axi_cmd_beat&nbsp;</td><td class=\"PName last\">cmd&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets addr, cmd, len,size,burst,lock,cache,prot,region,qos,data and beat_delay of cmd beat For write command, set awuser(if AWUSER_WIDTH&gt;0),wuser(if WUSER_WIDTH&gt;0), For read command, set aruser(if ARUSER_WIDTH&gt;0),ruser(if RUSER_WIDTH&gt;0).&nbsp; to be removed</div></div>",713:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype713\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> import_rd_beat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">inout</span>&nbsp;</td><td class=\"PType\">xil_axi_read_beat&nbsp;</td><td class=\"PName last\">beat&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets data, ruser(if RUSER_WIDTH&gt;0),rresp of xil_axi_read_beat.&nbsp; to be removed</div></div>",714:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype714\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> auto_fill_transaction(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_data_fill_t&nbsp;</td><td class=\"PName last\">data_pat,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_strb_fill_t&nbsp;</td><td class=\"PName last\">strb_pat,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_data_beat&nbsp;</td><td class=\"PName last\">data_fill&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Fill the transaction with different patterns based on the data_pat/strb_pat selected. When the data_pat is NOT set to XIL_AXI_DATA_FILL_NOTOUCH, The values of the strb\'s will all be set even if the strb_pat is set to XIL_AXI_DATA_FILL_NOTOUCH.</div></div>",715:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype715\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_monitor_transaction</div></div></div><div class=\"TTSummary\">AXI Monitor Transaction class.</div></div>",717:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype717\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_monitor_transaction&quot;</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">protocol</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">addrw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">32</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">dataw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">32</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">idw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">awusrw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">wusrw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">busrw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">arusrw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">rusrw</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">supports_narrow&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_burst&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_lock&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_cache&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_region&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_prot&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_qos&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_wstrb&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_bresp&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">has_rresp&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new axi_monitor_transaction, ~name~ is the name of the instance.</div></div>",718:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype718\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_ulong get_addr_phase_start()</div><div class=\"TTSummary\">Returns addr_phase_start of the axi monitor transaction</div></div>",719:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype719\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_monitor_print_times()</div><div class=\"TTSummary\">Sets monitor_print_times to be TRUE of axi monitor transaction</div></div>",720:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype720\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_monitor_print_times()</div><div class=\"TTSummary\">Sets monitor_print_times to be FALSE of axi monitor transaction</div></div>",721:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype721\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_monitor_print_times()</div><div class=\"TTSummary\">Returns monitor_print_times of the axi_monitor_transaction</div></div>",722:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype722\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> trigger_addr_phase_end(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">time&nbsp;</td><td class=\"PName last\">ready_time,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">time&nbsp;</td><td class=\"PName last\">valid_time,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">ready_cycle,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">valid_cycle,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">now&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets addr_phase_end,addr_phase_end_cycle,addr_ready_assert_time,addr_valid_assert_time,addr_ready_assert_cycle, addr_valid_assert_cycle,addr_phase_start,addr_accepted_cycles of axi monitor transaction.</div></div>",723:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype723\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> time get_addr_phase_end()</div><div class=\"TTSummary\">Returns addr_phase_end of the axi_monitor_transaction</div></div>",724:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype724\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> trigger_data_phase_start()</div><div class=\"TTSummary\">Sets data_phase_start of the axi_monitor_transaction to be current time</div></div>",725:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype725\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> time get_data_phase_start()</div><div class=\"TTSummary\">Returns data_phase_start of the axi_monitor_transaction</div></div>",726:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype726\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> trigger_data_phase_end(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">now&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets data_phase_end of the axi_monitor_transaction to be current time</div></div>",727:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype727\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> time get_data_phase_end()</div><div class=\"TTSummary\">Returns data_phase_end of the axi_monitor_transaction</div></div>",728:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype728\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> time get_bresp_phase_start()</div><div class=\"TTSummary\">Returns bresp_phase_start of the axi_monitor_transaction</div></div>",729:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype729\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> trigger_bresp_phase_end(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">time&nbsp;</td><td class=\"PName last\">ready_time,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">time&nbsp;</td><td class=\"PName last\">valid_time,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">ready_cycle,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">valid_cycle,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">now&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets bresp_phase_end,resp_ready_assert_time,resp_valid_assert_time,resp_ready_assert_cycle, resp_ready_assert_cycle,resp_valid_assert_cycle,bresp_phase_start,resp_accepted_cycles, bresp_phase_start,resp_accepted_cycles of axi monitor transaction.</div></div>",730:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype730\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> time get_bresp_phase_end()</div><div class=\"TTSummary\">Returns bresp_phase_end of the axi_monitor_transaction</div></div>",731:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype731\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> trigger_transaction_phase_start()</div><div class=\"TTSummary\">Sets transaction_phase_start of the axi_monitor_transaction to current time</div></div>",732:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype732\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> time get_transaction_phase_start()</div><div class=\"TTSummary\">Returns transaction_phase_start of the axi_monitor_transaction</div></div>",733:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype733\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> trigger_transaction_phase_end(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">now&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets transaction_phase_end of the axi_monitor_transaction to current time</div></div>",734:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype734\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> time get_transaction_phase_end()</div><div class=\"TTSummary\">Returns transaction_phase_end of the axi_monitor_transaction</div></div>",735:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype735\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_data_beat_time_fields(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName\">data_ready_assert_time,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName\">data_valid_assert_time,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName\">data_beat_accepted,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_int&nbsp;</td><td class=\"PName\">data_beat_accepted_cycles,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName\">now&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets data_ready_assert_time,data_valid_assert_time,data_beat_accepted,data_beat_accepted_cycles of axi monitor transaction.</div></div>",736:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype736\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> import_data_beat_fields(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">inout</span>&nbsp;</td><td class=\"PType\">xil_axi_write_beat&nbsp;</td><td class=\"PName last\">write_beat&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets transaction_phase_start,data_phase_end,data_ready_assert_time, data_valid_assert_time,data_beat_accepted,data_beat_accepted_cycles, data, stobe, wuser(if WUSER_WIDTH&gt;0)</div></div>",737:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype737\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> trigger_data_beat_accepted(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">time&nbsp;</td><td class=\"PName last\">ready_time,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">time&nbsp;</td><td class=\"PName last\">valid_time,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">ready_cycle,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">valid_cycle&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets data beat monitor characterics of data_beat_accepted,data_ready_assert_time, data_valid_assert_time,data_ready_assert_cycle,data_valid_assert_cycle,data_beat_accepted_cycles, data_beat_accepted&nbsp; of axi monitor transaction.</div></div>",738:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype738\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_ulong get_data_beat_accepted()</div><div class=\"TTSummary\">Returns data_beat_accepted of current beat in axi monitor transaction.</div></div>",739:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype739\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_ulong get_data_ready_assert_time()</div><div class=\"TTSummary\">Returns data_ready_assert_time of current beat&nbsp; of axi monitor transaction.</div></div>",740:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype740\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_ulong get_data_valid_assert_time()</div><div class=\"TTSummary\">Returns data_valid_assert_time of current beat&nbsp; of axi monitor transaction.</div></div>",741:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype741\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> copy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">axi_monitor_transaction&nbsp;</td><td class=\"PName last\">rhs</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Copies the contents of the input monitor transaction to the current monitor transaction</div></div>",742:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype742\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> axi_monitor_transaction my_clone ()</div><div class=\"TTSummary\">Clones the current monitor transaction and returns a handle to the new monitor transaction.</div></div>",969:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype969\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> sprint()</div><div class=\"TTSummary\">Prints out monitor transaction information</div></div>",744:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype744\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_scoreboard_transaction</div></div></div><div class=\"TTSummary\">AXI Scoreboard Transaction class.</div></div>",746:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype746\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_scoreboard_transaction&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new axi_scoreboard_transaction,&nbsp; ~name~ is the name of the instance.</div></div>",747:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype747\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_ready_gen</div></div></div><div class=\"TTSummary\">AXI Ready generation class. Ready signals of write command channel, write data channel, write response channel , read command channel and read data channel are generated independently from other attributes.&nbsp; This class is being used to generate all kinds of different patterns of ready signal which user wants. Please refer section READY Generation of PG267 for more details about how to generate ready.</div></div>",749:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype749\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_ready_gen&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new axi_ready_gen, ~name~ is the name of the instance.</div></div>",750:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype750\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> reset_to_defaults()</div><div class=\"TTSummary\">Reset all variables in ready generation to default value</div></div>",751:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype751\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> copy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">axi_ready_gen&nbsp;</td><td class=\"PName last\">rhs</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Copies the contents of the input ready generation to the current ready generation</div></div>",752:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype752\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> axi_ready_gen my_clone ()</div><div class=\"TTSummary\">Clones the current ready generation and returns a handle to the new generation</div></div>",753:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype753\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> convert2string()</div><div class=\"TTSummary\">Returns a format of string of Ready information for axi_ready_gen</div></div>",754:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype754\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_use_variable_ranges()</div><div class=\"TTSummary\">Sets the use of the variable ranges when the policy of axi_ready_gen is not RANDOM</div></div>",898:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype898\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_use_variable_ranges()</div><div class=\"TTSummary\">Clears the use of the variable ranges when the policy of axi_ready_gen is not RANDOM</div></div>",756:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype756\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_use_variable_ranges()</div><div class=\"TTSummary\">Returns the current state of the variable range use feature.</div></div>",757:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype757\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_ready_policy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ready_gen_policy_t&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the policy of axi_ready_gen</div></div>",758:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype758\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_ready_gen_policy_t get_ready_policy()</div><div class=\"TTSummary\">Returns the current ready generation policy of axi_ready_gen</div></div>",759:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype759\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_event_cycle_count_reset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets event_cycle_count_reset value of axi_ready_gen</div></div>",760:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype760\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_event_cycle_count_reset()</div><div class=\"TTSummary\">Returns the current event_cycle_count_reset of axi_ready_gen</div></div>",761:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype761\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> get_low_time_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns min_low_time and max_low_time of axi_ready_gen</div></div>",762:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype762\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_low_time_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets min_low_time and max_low_time of axi_ready_gen</div></div>",763:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype763\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_low_time()</div><div class=\"TTSummary\">Returns low time of the current ready generation</div></div>",764:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype764\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_low_time(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the low time of axi_ready_gen</div></div>",765:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype765\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> get_high_time_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns min_high_time and max_high_time of axi_ready_gen</div></div>",766:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype766\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_high_time_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets min_high_time and max_high_time of axi_ready_gen</div></div>",767:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype767\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_high_time()</div><div class=\"TTSummary\">Returns high time of axi_ready_gen</div></div>",768:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype768\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_high_time(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the high time of axi_ready_gen</div></div>",769:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype769\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> get_event_count_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns min_event_count and max_event_count of axi_ready_gen</div></div>",770:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype770\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_event_count_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets min_event_count and max_event_count of axi_ready_gen</div></div>",771:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype771\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_event_count()</div><div class=\"TTSummary\">Returns event_count of axi_ready_gen</div></div>",772:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype772\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_event_count(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">in</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of events that ready stays at high</div></div>",773:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype773\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_ready_rand_policy_t get_ready_rand_policy()</div><div class=\"TTSummary\">Returns ready_rand_policy of axi_ready_gen</div></div>",774:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype774\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_vif_mem_proxy</div></div></div><div class=\"TTSummary\">AXI VIF Proxy Class. It has virtual interface for AXI VIP interface. Drivers of AXI VIP drive transaction/ready onto AXI VIP bus interface through APIs(such as&nbsp; put_w/rdata) of this class, monitor of AXI VIP collects AXI interface information and convert it into transaction through APIs(get_w/rdata) in this class.</div></div>",776:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype776\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task wait_aclks(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">cnt</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Waits specified amount of posedge of aclk</div></div>",777:"<div class=\"NDToolTip TFunction LSystemverilog\"><div class=\"TTSummary\">Waits posedge of ACLK of m_vif</div></div>",778:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype778\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_posedge_aclk_with_hold()</div><div class=\"TTSummary\">Waits posedge of ACLK of m_vif and then wait hold_time</div></div>",779:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype779\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_negedge_aclk()</div><div class=\"TTSummary\">Waits negedge of ACLK of m_vif</div></div>",780:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype780\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_areset_deassert()</div><div class=\"TTSummary\">Waits areset to be deasserted</div></div>",781:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype781\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t is_aclk_high()</div><div class=\"TTSummary\">Returns TRUE if the aclk is in the HIGH phase of the cycle. It does not look at the ACLKEN to determine if this an active clock.</div></div>",782:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype782\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t is_aclk_low()</div><div class=\"TTSummary\">Returns TRUE if the aclk is in the LOW phase of the cycle. It does not look at the ACLKEN to determine if this an active clock.</div></div>",783:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype783\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_drive_x()</div><div class=\"TTSummary\">Returns 1 if dummy_drive_type is XIL_AXI_VIF_DRIVE_X, else returns 0</div></div>",784:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype784\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_axi_vif_dummy_drive_t get_dummy_drive_type(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cmd_t&nbsp;</td><td class=\"PName last\">d</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns dummy_drive_type of m_vif</div></div>",785:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype785\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task put_rdata(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">inout</span>&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">transfer,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">beat_num</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Puts specified beat into READ data Channel of axi_vif_mem_proxy.</div></div>",786:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype786\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task put_wdata(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">inout</span>&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">transfer,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">beat_num</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Puts specified beat into Write Data Channel of axi_vif_mem_proxy.</div></div>",787:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype787\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_vif_mem_proxy&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new axi vif proxy and set protocol version, ~name~ is the instance name.</div></div>",788:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype788\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_vif_axi_version_t get_axi_version()</div><div class=\"TTSummary\">Returns axi_version of axi_vif_mem_proxy.</div></div>",789:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype789\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_axi_version(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_vif_axi_version_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets axi_version of axi_vif_mem_proxy.</div></div>",790:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype790\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_axi_version_name()</div><div class=\"TTSummary\">Returns axi_version\'s name</div></div>",791:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype791\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_drive_x()</div><div class=\"TTSummary\">Sets dummy_drive_type to be XIL_AXI_VIF_DRIVE_X of axi_vif_mem_proxy.</div></div>",792:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype792\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_dummy_drive_type(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_vif_dummy_drive_t&nbsp;</td><td class=\"PName last\">inp</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets dummy_drive_type of axi_vif_mem_proxy.</div></div>",793:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype793\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> assign_vi (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">virtual interface</span> axi_vip_if `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Assigns m_vif of axi_vif_mem_proxy.</div></div>",794:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype794\" class=\"NDPrototype NoParameterForm\">task run_phase()</div><div class=\"TTSummary\">Start control processes for operation of axi_vif_mem_proxy.</div></div>",795:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype795\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_current_clk_count()</div><div class=\"TTSummary\">Returns clk_edge_counter of axi_vif_mem_proxy.</div></div>",796:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype796\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> time get_current_edge_time()</div><div class=\"TTSummary\">Returns clk_edge_time of axi_vif_mem_proxy.</div></div>",797:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype797\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> put_aw_noise()</div><div class=\"TTSummary\">Puts noise on Write command channel of axi_vif_mem_proxy.</div></div>",798:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype798\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> put_ar_noise()</div><div class=\"TTSummary\">Puts noise on read command channel of axi_vif_mem_proxy.</div></div>",799:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype799\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> put_w_noise()</div><div class=\"TTSummary\">Puts noise on write data channel of axi_vif_mem_proxy.</div></div>",800:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype800\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> put_r_noise()</div><div class=\"TTSummary\">Puts noise on Read data channel of axi_vif_mem_proxy.</div></div>",801:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype801\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> put_b_noise()</div><div class=\"TTSummary\">Puts noise on Bresp channel of axi_vif_mem_proxy.</div></div>",802:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype802\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> reset_aw()</div><div class=\"TTSummary\">Reset AW channel of axi_vif_mem_proxy.</div></div>",803:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype803\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> reset_ar()</div><div class=\"TTSummary\">Resets AR channel of axi_vif_mem_proxy.</div></div>",804:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype804\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> reset_w()</div><div class=\"TTSummary\">Resets W channel of axi_vif_mem_proxy.</div></div>",805:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype805\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> reset_r()</div><div class=\"TTSummary\">Resets R channel of axi_vif_mem_proxy.</div></div>",806:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype806\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> reset_b()</div><div class=\"TTSummary\">Resets B channel of axi_vif_mem_proxy.</div></div>",807:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype807\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> put_cmd(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">inout</span>&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">transfer</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Puts write/read commands on Write/Read commands Channel of axi_vif_mem_proxy.</div></div>",808:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype808\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> put_bresp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">axi_transaction&nbsp;</td><td class=\"PName last\">transfer</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Puts transaction information onto BRESP channel of axi_vif_mem_proxy.</div></div>",809:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype809\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_cmd_beat get_awcmd()</div><div class=\"TTSummary\">Collects write command channel info from IF and returns it to write command beat of axi_vif_mem_proxy.</div></div>",810:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype810\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_cmd_beat get_arcmd()</div><div class=\"TTSummary\">Collects read command channel info from IF and returns it to read command beat of axi_vif_mem_proxy.</div></div>",811:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype811\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_resp_beat get_bresp()</div><div class=\"TTSummary\">Collects bresp channel info from IF and returns it to bresp beat of axi_vif_mem_proxy.</div></div>",812:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype812\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_read_beat get_rdata()</div><div class=\"TTSummary\">Collects read data channel info from IF and returns it to read data beat of axi_vif_mem_proxy.</div></div>",813:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype813\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_write_beat get_wdata()</div><div class=\"TTSummary\">Collects write data channel info from IF and returns it to write data beat.</div></div>",814:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype814\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_awvalid()</div><div class=\"TTSummary\">Sets awvalid of m_vif to be 1</div></div>",815:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype815\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_arvalid()</div><div class=\"TTSummary\">Sets arvalid of m_vif to be 1</div></div>",816:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype816\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_awvalid()</div><div class=\"TTSummary\">Sets awvalid of m_vif to be 0</div></div>",817:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype817\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_arvalid()</div><div class=\"TTSummary\">Sets arvalid of m_vif to be 0</div></div>",818:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype818\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_bvalid()</div><div class=\"TTSummary\">Sets bvalid of m_vif to be 1</div></div>",819:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype819\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_bvalid()</div><div class=\"TTSummary\">Sets bvalid of m_vif to be 0</div></div>",820:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype820\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_rvalid()</div><div class=\"TTSummary\">Sets rvalid of m_vif to be 1</div></div>",821:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype821\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_rvalid()</div><div class=\"TTSummary\">Sets rvalid of m_vif to be 0</div></div>",822:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype822\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_wvalid()</div><div class=\"TTSummary\">Sets wvalid of m_vif to be 1</div></div>",823:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype823\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_wvalid()</div><div class=\"TTSummary\">Sets wvalid of m_vif to be 0</div></div>",824:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype824\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_awready()</div><div class=\"TTSummary\">Sets awready of m_vif to be 1</div></div>",825:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype825\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_arready()</div><div class=\"TTSummary\">Sets arready of m_vif to be 1</div></div>",826:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype826\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_awready()</div><div class=\"TTSummary\">Sets awready of m_vif to be 0</div></div>",827:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype827\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_arready()</div><div class=\"TTSummary\">Sets arready of m_vif to be 0</div></div>",828:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype828\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_bready()</div><div class=\"TTSummary\">Sets bready of m_vif to be 1</div></div>",829:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype829\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_bready()</div><div class=\"TTSummary\">Sets bready of m_vif to be 0</div></div>",830:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype830\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_rready()</div><div class=\"TTSummary\">Sets rready of m_vif to be 1</div></div>",831:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype831\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_rready()</div><div class=\"TTSummary\">Sets rready of m_vif to be 0</div></div>",832:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype832\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_wready()</div><div class=\"TTSummary\">Sets wready of m_vif to be 1</div></div>",833:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype833\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_wready()</div><div class=\"TTSummary\">Sets wready of m_vif to be 0</div></div>",834:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype834\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_awready_asserted()</div><div class=\"TTSummary\">Returns 1 if AWREADY of clock block in m_vif is 1, else returns 0</div></div>",835:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype835\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_arready_asserted()</div><div class=\"TTSummary\">Returns 1 if ARREADY of clock block in m_vif is 1, else returns 0</div></div>",836:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype836\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_wready_asserted()</div><div class=\"TTSummary\">Returns 1 if WREADY of clock block in m_vif is 1, else returns 0</div></div>",837:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype837\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_rready_asserted()</div><div class=\"TTSummary\">Returns 1 if RREADY of clock block in m_vif is 1, else returns 0</div></div>",838:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype838\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_bready_asserted()</div><div class=\"TTSummary\">Returns 1 if BREADY of clock block in m_vif is 1, else returns 0</div></div>",839:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype839\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_awvalid_asserted()</div><div class=\"TTSummary\">Returns 1 if AWVALID of clock block in m_vif is 1, else returns 0</div></div>",840:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype840\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_arvalid_asserted()</div><div class=\"TTSummary\">Returns 1 if ARVALID of clock block in m_vif is 1, else returns 0</div></div>",841:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype841\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_wvalid_asserted()</div><div class=\"TTSummary\">Returns 1 if WVALID of clock block in m_vif is 1, else returns 0</div></div>",842:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype842\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_rvalid_asserted()</div><div class=\"TTSummary\">Returns 1 if RVALID of clock block in m_vif is 1, else returns 0</div></div>",843:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype843\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_bvalid_asserted()</div><div class=\"TTSummary\">Returns 1 if BVALID of clock block in m_vif is 1, else returns 0</div></div>",844:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype844\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_live_awvalid_asserted()</div><div class=\"TTSummary\">Returns 1 if AWVALID of m_vif is 1, else returns 0</div></div>",845:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype845\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_live_arvalid_asserted()</div><div class=\"TTSummary\">Returns 1 if ARVALID of m_vif is 1, else returns 0</div></div>",846:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype846\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_live_wvalid_asserted()</div><div class=\"TTSummary\">Returns 1 if WVALID of m_vif is 1, else returns 0</div></div>",847:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype847\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_live_rvalid_asserted()</div><div class=\"TTSummary\">Returns 1 if RVALID of m_vif is 1, else returns 0</div></div>",848:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype848\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_live_bvalid_asserted()</div><div class=\"TTSummary\">Returns 1 if BVALID of m_vif is 1, else returns 0</div></div>",849:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype849\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_live_awvalid_asserted()</div><div class=\"TTSummary\">Wait AWVALID of m_vif is 1</div></div>",850:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype850\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_live_arvalid_asserted()</div><div class=\"TTSummary\">Wait ARVALID of m_vif is 1</div></div>",851:"<div class=\"NDToolTip TFunction LSystemverilog\"><div class=\"TTSummary\">Wait WALID of m_vif is 1</div></div>",852:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype852\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_live_rvalid_asserted()</div><div class=\"TTSummary\">Wait RVALID of m_vif is 1</div></div>",853:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype853\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_live_bvalid_asserted()</div><div class=\"TTSummary\">Wait BVALID of m_vif is 1</div></div>",854:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype854\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_areset_asserted()</div><div class=\"TTSummary\">Waits areset to be asserted</div></div>",855:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype855\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_wvalid_sampled()</div><div class=\"TTSummary\">Wait till WVALID is sampled</div></div>",856:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype856\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_aw_accepted()</div><div class=\"TTSummary\">Waits till AWREADY/AWVALID handshake occurs</div></div>",857:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype857\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_ar_accepted()</div><div class=\"TTSummary\">Waits till ARREADY/ARVALID handshake occurs</div></div>",858:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype858\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_r_accepted()</div><div class=\"TTSummary\">Waits till RREADY/RVALID handshake occurs</div></div>",859:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype859\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_w_accepted()</div><div class=\"TTSummary\">Waits till WREADY/WVALID handshake occurs</div></div>",860:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype860\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_b_accepted()</div><div class=\"TTSummary\">Waits till BREADY/BVALID handshake occurs</div></div>",861:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype861\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_aw_accepted()</div><div class=\"TTSummary\">Returns 1 if AWREADY/AWVALID handshake occurs</div></div>",862:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype862\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_ar_accepted()</div><div class=\"TTSummary\">Returns 1 if ARREADY/ARVALID handshake occurs</div></div>",863:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype863\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_r_accepted()</div><div class=\"TTSummary\">Returns 1 if RREADY/RVALID handshake occurs</div></div>",864:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype864\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_w_accepted()</div><div class=\"TTSummary\">Returns 1 if WREADY/WVALID handshake occurs</div></div>",865:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype865\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_b_accepted()</div><div class=\"TTSummary\">Returns 1 if BREADY/BVALID handshake occurs</div></div>",866:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype866\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_monitor</div></div></div><div class=\"TTSummary\">When active the AXI Monitor will record transactions that are presented on the virtual interface.It does below functions: Monitors all 5 AXI channels: AW, AR, R, W, and B.&nbsp; Collects and re-orders R Channel beats and returns a completed transaction when the RLAST is accepted Collects and re-orders B Channel response and returns a completed transaction when the B channel is accepted Transaction based protocol checking</div></div>",868:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">xil_analysis_port #(axi_monitor_transaction)&nbsp; item_collected_port; provides methods for axi monitor transaction.</div></div>",870:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype870\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">name</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new monitor object,initalize the original settings and name is the instance name.</div></div>",871:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype871\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_vif(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">axi_vif_mem_proxy `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Assigns the virtual interface of the driver of axi_monitor.</div></div>",872:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype872\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_vif_axi_version_t get_axi_version()</div><div class=\"TTSummary\">Returns the value of AXI version of the transaction of axi_monitor.</div></div>",873:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype873\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_axi_version_name()</div><div class=\"TTSummary\">Returns the name of AXI version of the transaction of axi_monitor.</div></div>",874:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype874\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_wr_transaction_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of WRITE transactions that the Driver will have in flight at one time of axi_monitor.</div></div>",875:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype875\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_wr_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of WRITE transactions that the Driver will have in flight at one time of axi_monitor.</div></div>",876:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype876\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_rd_transaction_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of READ transactions that the Driver will have in flight at one time of axi_monitor.</div></div>",877:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype877\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_rd_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of READ transactions that the Driver will have in flight at one time of axi_monitor.</div></div>",878:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype878\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> enable_transaction_depth_checks()</div><div class=\"TTSummary\">Turn on current agent\'s transaction depth check and its monitor\'s enable_transaction_depth_checks of axi_monitor.</div></div>",879:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype879\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> disable_transaction_depth_checks()</div><div class=\"TTSummary\">Turn off current agent\'s transaction depth check and its monitor\'s enable_transaction_depth_checks of axi_monitor.</div></div>",880:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype880\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_transaction_depth_check_status()</div><div class=\"TTSummary\">Returns transaction_depth_checks_enabled of axi_monitor.</div></div>",5:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype5\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> disable_exclusive_checks()</div><div class=\"TTSummary\">Turn off current agent\'s exclusive transfer checks</div></div>",7:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype7\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> enable_exclusive_checks()</div><div class=\"TTSummary\">Turn on current agent\'s exclusive transfer checks</div></div>",881:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype881\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_num_rd_transactions_inflight()</div><div class=\"TTSummary\">Returns number of read transaction in flight of axi_monitor.</div></div>",882:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype882\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_num_wr_transactions_inflight()</div><div class=\"TTSummary\">Returns number of write transaction in flight of axi_monitor.</div></div>",883:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype883\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task run_phase()</div><div class=\"TTSummary\">Start control processes for operation of axi_monitor.</div></div>",884:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype884\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_phase()</div><div class=\"TTSummary\">Stops all control processes of axi_monitor.</div></div>",885:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype885\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_monitor_transaction create_transaction (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_transaction&quot;</span>,</td></tr><tr><td class=\"PType first\">xil_axi_cmd_t&nbsp;</td><td class=\"PName\">dir</td><td></td><td class=\"last\"></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns an AXI monitor transaction class that has been &quot;newed&quot; of of axi_monitor.</div></div>",886:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype886\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_mst_wr_driver</div></div></div><div class=\"TTSummary\">AXI Master Write Driver class. The Driver will issue the commands on the AW channel and payload on the W channel. It will declare the transaction as complete when the B channel is acknowledge with the same ID. It has below features:</div></div>",888:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">axi_vif_mem_proxy `AXI_PARAM_ORDER&nbsp; vif_proxy; AXI VIF Proxy Class</div></div>",890:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype890\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_mst_wr_driver&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new AXI master write driver axi_mst_wr_driver. ~name~ is the name of the instance.</div></div>",891:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype891\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_vif(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">axi_vif_mem_proxy `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Assigns the virtual interface of the axi_mst_wr_driver.</div></div>",892:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype892\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_bready_gen(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen_t&nbsp;</td><td class=\"PName last\">new_gen</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets bready_gen of the axi_mst_wr_driver.</div></div>",893:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype893\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> axi_ready_gen_t get_bready_gen()</div><div class=\"TTSummary\">Returns bready_gen of the axi_mst_wr_driver.</div></div>",894:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype894\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_forward_progress_timeout_value (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets forward_progress_timeout_value of the axi_mst_wr_driver.</div></div>",895:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype895\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_forward_progress_timeout_value ()</div><div class=\"TTSummary\">Returns forward_progress_timeout_value of the axi_mst_wr_driver.</div></div>",896:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype896\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_waiting_valid_timeout_value (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets waiting_valid_timeout_value of the axi_mst_wr_driver.</div></div>",897:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype897\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_waiting_valid_timeout_value ()</div><div class=\"TTSummary\">Returns waiting_valid_timeout_value of the axi_mst_wr_driver. waiting_valid_timeout_value is used for driver to wait a certain number of cycles for bvalid/bready, awvalid/awready and wvalid/wready handshake occurs before it time out.</div></div>",930:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype930\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_transaction_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_depth</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of WRITE transactions that the axi_mst_wr_driver will have in flight at one time.</div></div>",931:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype931\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of WRITE transactions that the axi_mst_wr_driver will have in flight at one time.</div></div>",900:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype900\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_awaddr_watchdog_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_depth</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets awaddr_watchdog_delay of the axi_mst_wr_driver.</div></div>",901:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype901\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_awaddr_watchdog_delay()</div><div class=\"TTSummary\">Returns awaddr_watchdog_delay of the axi_mst_wr_driver.</div></div>",902:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype902\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_adjust_addr_delay_enabled()</div><div class=\"TTSummary\">Returns the current state of adjust_addr_delay_enabled.</div></div>",903:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype903\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_adjust_addr_delay_enabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_boolean_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of adjust_addr_delay_enabled of the transaction.</div></div>",904:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype904\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_adjust_data_beat_delay_enabled()</div><div class=\"TTSummary\">Returns the current state of adjust_data_beat_delay_enabled.</div></div>",905:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype905\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_adjust_data_beat_delay_enabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_boolean_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of adjust_data_beat_delay_enabled of the transaction.</div></div>",906:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype906\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_boolean_t is_driver_idle()</div><div class=\"TTSummary\">Returns TRUE if driver is idle, else FALSE</div></div>",907:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype907\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_num_transactions_inflight()</div><div class=\"TTSummary\">Returns number of transactions in flight</div></div>",908:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype908\" class=\"NDPrototype NoParameterForm\">task run_phase()</div><div class=\"TTSummary\">Start control processes for operation of axi_mst_wr_driver.</div></div>",909:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype909\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_phase()</div><div class=\"TTSummary\">Stops all control processes of axi_mst_wr_driver.</div></div>",910:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype910\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task halt_phase()</div><div class=\"TTSummary\">Allows for all inflight transactions to complete and no new transaction will be serviced. All other transactions will halt in axi_mst_wr_driver.</div></div>",911:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype911\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task resume_phase()</div><div class=\"TTSummary\">Resumes processing of the pending transactions in axi_mst_wr_driver.</div></div>",912:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype912\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the AXI transaction to the driver</div></div>",913:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype913\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task wait_rsp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This blocking function will not return until driver send back response transaction</div></div>",914:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype914\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_transaction create_transaction (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_transaction&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns an axi transaction class that has been &quot;newed&quot; of axi_mst_wr_driver.</div></div>",915:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype915\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send_bready(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the ready structure to the axi_mst_wr_driver for controlling the READY channel.</div></div>",916:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype916\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_ready_gen create_ready (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_ready&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns a ready class that has been &quot;newed&quot; of axi_mst_wr_driver.</div></div>",917:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype917\" class=\"NDPrototype NoParameterForm\">task wait_driver_idle()</div><div class=\"TTSummary\">This is a blocking task which will wait until there are no outstanding transactions in the axi_mst_wr_driver. This means that all the transactions send to the driver have received a corresponding B channel response.</div></div>",918:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype918\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_mst_rd_driver</div></div></div><div class=\"TTSummary\">AXI Master Read Driver class.&nbsp; It receives READ transactions from the user environment and drives the AR channel</div></div>",920:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">axi_vif_mem_proxy `AXI_PARAM_ORDER&nbsp; vif_proxy; AXI VIF Proxy Class</div></div>",922:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype922\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_mst_rd_driver&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create an AXI master read driver in axi_mst_rd_driver.</div></div>",923:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype923\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_vif(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">axi_vif_mem_proxy `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Assigns the virtual interface of the AXI master read driver in axi_mst_rd_driver.</div></div>",924:"<div class=\"NDToolTip TFunction LSystemverilog\"><div class=\"TTSummary\">Sets rready_gen of the AXI master read driver in axi_mst_rd_driver.</div></div>",925:"<div class=\"NDToolTip TFunction LSystemverilog\"><div class=\"TTSummary\">Returns rready_gen of the AXI master read driver in axi_mst_rd_driver.</div></div>",926:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype926\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_forward_progress_timeout_value (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets forward_progress_timeout_value of the axi_mst_rd_driver</div></div>",927:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype927\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_forward_progress_timeout_value ()</div><div class=\"TTSummary\">Returns forward_progress_timeout_value of  axi_mst_rd_driver</div></div>",928:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype928\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_waiting_valid_timeout_value (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets waiting_valid_timeout_value of axi_mst_rd_driver, waiting_valid_timeout_value is used for driver to wait a certain number of cycles for rvalid/rready, arvalid/arready handshake occurs before it time out.</div></div>",929:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype929\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_waiting_valid_timeout_value ()</div><div class=\"TTSummary\">Returns waiting_valid_timeout_value of axi_mst_rd_driver.</div></div>",1344:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1344\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_transaction_depth (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_depth</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of transactions that the Driver will have in flight at one time in axi_mst_rd_driver.</div></div>",1345:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1345\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of transactions that the Driver will have in flight at one time in axi_mst_rd_driver.</div></div>",932:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype932\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_boolean_t is_driver_idle()</div><div class=\"TTSummary\">Returns TRUE if driver is idle, else FALSE in axi_mst_rd_driver</div></div>",933:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype933\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_num_transactions_inflight()</div><div class=\"TTSummary\">Returns number of transactions in flight in axi_mst_rd_driver</div></div>",934:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype934\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_adjust_addr_delay_enabled()</div><div class=\"TTSummary\">Returns the current state of adjust_addr_delay_enabled in axi_mst_rd_driver.</div></div>",935:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype935\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_adjust_addr_delay_enabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_boolean_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of adjust_addr_delay_enabled of the transaction in axi_mst_rd_driver.</div></div>",936:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype936\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_adjust_data_beat_delay_enabled()</div><div class=\"TTSummary\">Returns the current state of adjust_data_beat_delay_enabled in axi_mst_rd_driver.</div></div>",937:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype937\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_adjust_data_beat_delay_enabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_boolean_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of adjust_data_beat_delay_enabled of the transaction in axi_mst_rd_driver.</div></div>",938:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype938\" class=\"NDPrototype NoParameterForm\">task run_phase()</div><div class=\"TTSummary\">Start control processes for operation of axi_mst_rd_driver</div></div>",939:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype939\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_phase()</div><div class=\"TTSummary\">Stops all control processes of axi_mst_rd_driver.</div></div>",940:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype940\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task halt_phase()</div><div class=\"TTSummary\">Allows for all inflight transactions to complete and no new transaction will be serviced. All other transactions will halt of axi_mst_rd_driver.</div></div>",941:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype941\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task resume_phase()</div><div class=\"TTSummary\">Resumes processing pending transactions of axi_mst_rd_driver.</div></div>",942:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype942\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the AXI transaction to the driver of axi_mst_rd_driver.</div></div>",943:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype943\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task wait_rsp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This blocking function will not return until driver send back response transaction of axi_mst_rd_driver.</div></div>",944:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype944\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_transaction create_transaction (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_transaction&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns an AXI transaction class that has been &quot;newed&quot; of axi_mst_rd_driver.</div></div>",945:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype945\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send_rready(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the ready structure to the driver for controlling the READY channel of axi_mst_rd_driver.</div></div>",946:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype946\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_ready_gen create_ready (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_ready&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns a ready class that has been &quot;newed&quot; of axi_mst_rd_driver.</div></div>",947:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype947\" class=\"NDPrototype NoParameterForm\">task wait_driver_idle()</div><div class=\"TTSummary\">This is a blocking task which will wait until there are no outstanding transactions in the driver. This means that all the transactions send to the driver have received a corresponding RLast response of axi_mst_rd_driver.</div></div>",948:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype948\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_mst_agent</div></div></div><div class=\"TTSummary\">AXI Master Agent class, it contains other components that comprise the entire Master Verification component.&nbsp; These are the Monitor, Read Driver and Write Driver -- refer PG267 section about AXI Master Agent for more details.</div></div>",950:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">axi_monitor&nbsp; `AXI_PARAM_ORDER monitor;</div></div>",952:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype952\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_mst_agent&quot;</span>,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">virtual interface</span> axi_vip_if `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName\">vif</td><td></td><td class=\"last\"></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create an AXI Master Agent,~name~ is the instance name and axi_vip_if is the interface in the design.&nbsp; Please see PG267 for how to find the interface in design hierarchy.</div></div>",953:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype953\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_verbosity(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_verbosity&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the verbosity of the axi_mst_agent and all sub classes.</div></div>",954:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype954\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_agent_tag(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the tag of the axi_mst_agent and all sub classes.</div></div>",955:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype955\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_vif(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">axi_vif_mem_proxy `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the Agent\'s virtual interface. This is the interface that will be monitored and/or driven.</div></div>",956:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype956\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_wr_transaction_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of WRITE transactions that the axi_mst_agent will have in flight at one time.</div></div>",957:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype957\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_wr_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of WRITE transactions that the axi_mst_agent will have in flight at one time.</div></div>",958:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype958\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_rd_transaction_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of READ transactions that the axi_mst_agent will have in flight at one time.</div></div>",959:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype959\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_rd_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of READ transactions that the axi_mst_agent will have in flight at one time.</div></div>",960:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype960\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> enable_transaction_depth_checks()</div><div class=\"TTSummary\">Turn on current agent\'s transaction depth checks and its monitor\'s enable_transaction_depth_checks</div></div>",961:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype961\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> disable_transaction_depth_checks()</div><div class=\"TTSummary\">Turn off current agent\'s transaction depth check and its monitor\'s enable_transaction_depth_checks</div></div>",962:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype962\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task start_monitor()</div><div class=\"TTSummary\">Enables the monitor in this agent to start collecting data.</div></div>",963:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype963\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task start_master()</div><div class=\"TTSummary\">Enables the monitor, READ driver and WRITE Driver in this agent to start collecting data.&nbsp; The drivers will only issue transactions when the send functions are called.</div></div>",964:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype964\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_master()</div><div class=\"TTSummary\">Disables the READ and WRITE drivers. Once disabled, no further action will occur by the drivers.</div></div>",965:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype965\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task halt_master()</div><div class=\"TTSummary\">Allows for all inflight transactions to complete and no new transaction will be serviced. All other transactions will halt.</div></div>",966:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype966\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task resume_master()</div><div class=\"TTSummary\">Resumes processing of the pending transactions.</div></div>",967:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype967\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_monitor()</div><div class=\"TTSummary\">Disables the monitor in this agent from start collecting data. . Once disabled, no further action will occur by the monitor.</div></div>",968:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype968\" class=\"NDPrototype NoParameterForm\">task wait_drivers_idle()</div><div class=\"TTSummary\">This blocking function will not return until all the downstream transactions have completed.</div></div>",9:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype9\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task send_multi_wrbursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">num_xfers,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">start_addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">myid ,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">mysize,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">mylen,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">myburst,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">bit&nbsp;</td><td class=\"PName last\">no_xfer_delays&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Convenience function to generate a series of same type of transactions.</div></div>",970:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype970\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task send_multi_rand_wrbursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">num_xfers,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">bit&nbsp;</td><td class=\"PName\">no_xfer_delays&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Convenience function to generate a series of random transactions.</div></div>",1135:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1135\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task send_multi_rdbursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">num_xfers,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">start_addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">myid ,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">mysize,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">mylen,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">myburst,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">bit&nbsp;</td><td class=\"PName last\">no_xfer_delays&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Convenience function to generate a series of same type of transactions transactions.</div></div>",972:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype972\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task send_multi_rand_rdbursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">num_xfers,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">bit&nbsp;</td><td class=\"PName\">no_xfer_delays&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Convenience function to generate a series of random transactions.</div></div>",973:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype973\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task AXI4_READ_BURST (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">id,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">len,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">size,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">burst,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_lock_t&nbsp;</td><td class=\"PName last\">lock,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cache_t&nbsp;</td><td class=\"PName last\">cache,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">prot,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_region_t&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_qos_t&nbsp;</td><td class=\"PName last\">qos,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_user_beat&nbsp;</td><td class=\"PName last\">aruser,</td></tr><tr><td class=\"PModifierQualifier first\">output bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">4096</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PModifierQualifier first\">output xil_axi_resp_t&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">255</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">resp,</td></tr><tr><td class=\"PModifierQualifier first\">output xil_axi_data_beat&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">255</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">ruser&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This task does a full read process for AXI4.It is composed of a series of tasks and functions.&nbsp; It first creates transaction from master read driver,sets up the transaction, sends it and then waits till response back.&nbsp; This task returns when the read transaction is complete.</div></div>",974:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype974\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task AXI3_READ_BURST (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">id,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">len,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">size,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">burst,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_lock_t&nbsp;</td><td class=\"PName last\">lock,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cache_t&nbsp;</td><td class=\"PName last\">cache,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">prot,</td></tr><tr><td class=\"PModifierQualifier first\">output bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">2048</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PModifierQualifier first\">output xil_axi_resp_t&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">15</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">resp&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This task does a full read process for AXI3. It is composed of a series of tasks and functions.&nbsp; It first creates transaction from master read driver,sets up the transaction, sends it and then waits till response back.&nbsp; This task returns when the read transaction is complete.</div></div>",975:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype975\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task AXI4LITE_READ_BURST (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">prot,</td></tr><tr><td class=\"PModifierQualifier first\">output bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">8</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_resp_t&nbsp;</td><td class=\"PName last\">resp&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This task does a full read process for AXI4LITE. It is composed of a series of tasks and functions.&nbsp; It first creates transaction from master read driver,sets up the transaction, sends it and then waits till response back.&nbsp; This task returns when the read transaction is complete.</div></div>",976:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype976\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task AXI4_WRITE_BURST (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">id,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">len,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">size,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">burst,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_lock_t&nbsp;</td><td class=\"PName last\">lock,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cache_t&nbsp;</td><td class=\"PName last\">cache,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">prot,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_region_t&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_qos_t&nbsp;</td><td class=\"PName last\">qos,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_user_beat&nbsp;</td><td class=\"PName last\">awuser,</td></tr><tr><td class=\"PModifierQualifier first\">input bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">4096</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PModifierQualifier first\">input xil_axi_data_beat&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">255</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">wuser,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_resp_t&nbsp;</td><td class=\"PName last\">resp&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This task does a full write process for AXI4.It is composed of a series of tasks and&nbsp; functions.It first creates transaction from master write driver,sets up the transaction, sends it and then waits till response back.&nbsp; This task returns when the complete write transaction is complete.</div></div>",977:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype977\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task AXI3_WRITE_BURST (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">id,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">len,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">size,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">burst,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_lock_t&nbsp;</td><td class=\"PName last\">lock,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cache_t&nbsp;</td><td class=\"PName last\">cache,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">prot,</td></tr><tr><td class=\"PModifierQualifier first\">input bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">2048</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_resp_t&nbsp;</td><td class=\"PName last\">resp&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This task does a full write process for AXI3.It is composed of a series of tasks and&nbsp; functions.It first creates transaction from master write driver,sets up the transaction, sends it and then waits till response back.&nbsp; This task returns when the complete write transaction is complete.</div></div>",978:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype978\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task AXI4LITE_WRITE_BURST (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">prot,</td></tr><tr><td class=\"PModifierQualifier first\">input bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">8</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_resp_t&nbsp;</td><td class=\"PName last\">resp&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This task does a full write process for AXI4LITE. It is composed of a series of tasks and&nbsp; functions.It first creates transaction from master write driver,sets up the transaction, sends it and then waits till response back.&nbsp; This task returns when the complete write transaction is complete.</div></div>",979:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype979\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task set_nobackpressure_readies()</div><div class=\"TTSummary\">Convenience function to set the RREADY/BREADY of the master to not apply any backpressure to the simulation.</div></div>",980:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype980\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_slv_wr_driver</div></div></div><div class=\"TTSummary\">AXI Slave Write Driver Class.It does : Receives AW Command and the WLAST from the interface and then passes that transaction to the user environment, the user will then create a BRESP transaction and pass it back to the driver to drive the B channel.</div></div>",982:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">axi_vif_mem_proxy `AXI_PARAM_ORDER&nbsp; vif_proxy;AXI VIF Proxy Class</div></div>",984:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype984\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_slv_wr_driver&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create an AXI slave write driver</div></div>",985:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype985\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_vif(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">axi_vif_mem_proxy `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Assigns the virtual interface of the slave write driver.</div></div>",1028:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1028\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_awready_gen(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen_t&nbsp;</td><td class=\"PName last\">new_gen</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Puts an axi_ready_gen object into awready generation queue of the slave write driver. Once this object is sent over to the driver, the awready policy will stay the same till a new awready policy is sent over to the driver.</div></div>",987:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype987\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> axi_ready_gen_t get_awready_gen()</div><div class=\"TTSummary\">Returns awready_gen of the slave write driver.</div></div>",1030:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1030\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_wready_gen(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen_t&nbsp;</td><td class=\"PName last\">new_gen</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Puts an axi_ready_gen object into wready generation queue of the slave write driver. Once this object is sent over to the driver, the wready policy will stay the same till a new wready policy is sent over to the driver.</div></div>",989:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype989\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> axi_ready_gen_t get_wready_gen()</div><div class=\"TTSummary\">Returns wready_gen of the slave write driver.</div></div>",990:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype990\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_reorder_response_ability (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_reorder_ability_t&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets reorder_response_ability of the slave write driver.</div></div>",991:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype991\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_reorder_ability_t get_reorder_response_ability ()</div><div class=\"TTSummary\">Returns reorder_response_ability of the slave write driver</div></div>",992:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype992\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_reorder_backoff_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the reordering backoff timer range of the slave write driver.&nbsp; Since the slave may pop the BRESP quicker than one is available, if there is only one entry then insert a backoff that will allow for some accumulation of time so perhaps another BRESP will be ready to send.</div></div>",993:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype993\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> get_reorder_backoff_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the reordering backoff timer range of the slave write driver.</div></div>",1034:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1034\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_forward_progress_timeout_value (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets forward_progress_timeout_value of the slave write driver,forward_progress_timeout_value is used for the driver to wait a certain number of cycles for any of awready/awvalid, wready/wvalid,bready/bvalid handshakes occur before it time out</div></div>",995:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype995\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_forward_progress_timeout_value ()</div><div class=\"TTSummary\">Returns forward_progress_timeout_value of the slave write driver</div></div>",1035:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1035\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_waiting_valid_timeout_value (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets waiting_valid_timeout_value of the slave write driver, waiting_valid_timeout_value is used for driver to wait a certain number of cycles for bvalid/bready handshake occurs before it time out.</div></div>",1042:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1042\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_waiting_valid_timeout_value ()</div><div class=\"TTSummary\">Returns waiting_valid_timeout_value of the slave write driver.</div></div>",1346:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1346\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_transaction_depth (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_depth</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of WRITE transactions that the slave write Driver will have in flight at one time.</div></div>",1347:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1347\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of WRITE transactions that the slave write driver will have in flight at one time.</div></div>",1000:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1000\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_num_pending_cmds()</div><div class=\"TTSummary\">Returns number of commands in pending of the slave write driver.</div></div>",1001:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1001\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_cmds_inflight()</div><div class=\"TTSummary\">Returns number of commands in flight of the slave write driver.</div></div>",1002:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1002\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_xfer_wrcmd_order(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_xfer_wrcmd_order_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets wrcmd_order of the slave write driver.</div></div>",1003:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1003\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_xfer_wrcmd_order_t get_xfer_wrcmd_order()</div><div class=\"TTSummary\">Returns wrcmd_order of the slave write driver.</div></div>",1004:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1004\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_inbound_fifo_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets inbound_fifo_depth of the slave write driver.</div></div>",1005:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1005\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_uint get_inbound_fifo_depth()</div><div class=\"TTSummary\">Returns inbound_fifo_depth of the slave write driver.</div></div>",1006:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1006\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_boolean_t is_driver_idle()</div><div class=\"TTSummary\">Returns TRUE if the slave write driver is idle, else FALSE</div></div>",1097:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1097\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_awaddr_watchdog_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_depth</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets awaddr_watchdog_delay of the slave write driver. awaddr_watchdog_delay is for the driver to wait a certain number of cycles for wready/wvalid handshake occurs before it times out.</div></div>",1008:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1008\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_awaddr_watchdog_delay()</div><div class=\"TTSummary\">Returns awaddr_watchdog_delay of the slave write driver</div></div>",1009:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1009\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_adjust_response_delay_enabled()</div><div class=\"TTSummary\">Returns the current state of adjust_response_delay_enabled of the slave write driver.</div></div>",1010:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1010\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_adjust_response_delay_enabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_boolean_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the value of adjust_response_delay_enabled of the slave write driver.</div></div>",1011:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1011\" class=\"NDPrototype NoParameterForm\">task run_phase()</div><div class=\"TTSummary\">Start control processes for operation of slave write driver.</div></div>",1012:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1012\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_phase()</div><div class=\"TTSummary\">Stops all control processes of slave write driver.</div></div>",1013:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1013\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task get_wr_reactive (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">transfer</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns write reactive transaction.The slave VIP agent gets write transaction information,fill in response and send it back to Slave VIP interface.The usage of this API is shown below and it MUST be put in initial, forever procedure since get_wr_reactive is blocking, so does send. Please refer example design simset sim_allconfig for more details.</div></div>",1014:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1014\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_transaction create_transaction (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_transaction&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns an AXI transaction class that has been &quot;newed&quot;</div></div>",1106:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1106\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send_wready(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the ready structure to the slave write driver for controlling the WREADY channel, the wready policy will stay the same till the driver gets a new ready policy.</div></div>",1016:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1016\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_ready_gen create_ready (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_ready&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns a ready class that has been &quot;newed&quot;.</div></div>",1342:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1342\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send_awready(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the ready structure to the slave write driver for controlling the AWREADY channel, the awready policy will stay the same till the driver gets a new ready policy.</div></div>",1018:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1018\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the AXI transaction to the slave write driver</div></div>",1019:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1019\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task wait_rsp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This blocking function will not return until slave write driver send back response transaction.</div></div>",1020:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1020\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_slv_rd_driver</div></div></div><div class=\"TTSummary\">AXI Slave Read Driver Class. It does below: Receives AR Command from the interface and then passes that command to the user environment. The user will then create a READ transaction and pass it back to the driver to drive the R channel.</div></div>",1022:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">axi_vif_mem_proxy `AXI_PARAM_ORDER&nbsp; vif_proxy; AXI VIF Proxy Class</div></div>",1024:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1024\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_slv_rd_driver&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create an AXI slave read driver</div></div>",1025:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1025\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_reorder_data_ability (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_reorder_ability_t&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets reorder_data_ability of the slave read driver. please refer set_xfer_preemptive_probability in  axi_transaction for more information about usage.</div></div>",1026:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1026\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_reorder_ability_t get_reorder_data_ability ()</div><div class=\"TTSummary\">Returns reorder_data_ability of the slave read driver</div></div>",1027:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1027\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_vif(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">axi_vif_mem_proxy `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Assigns the virtual interface of the slave read driver.</div></div>",1350:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1350\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_arready_gen(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen_t&nbsp;</td><td class=\"PName last\">new_method</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Puts an axi_ready_gen object into arready generation queue of the slave read driver.Once this object is sent to the driver, the arready policy will stay the same till a new arready policy is sent over to the driver.</div></div>",1029:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1029\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> axi_ready_gen_t get_arready_gen()</div><div class=\"TTSummary\">Returns the arready_gen of the slave read driver.</div></div>",971:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype971\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_forward_progress_timeout_value (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets forward_progress_timeout_value of the slave read driver. forward_progress_timeout_value is used for driver to wait a certain number of cycles for any accept beats occurs before it time out.&nbsp; transaction in flight.</div></div>",1031:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1031\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_forward_progress_timeout_value ()</div><div class=\"TTSummary\">Returns forward_progress_timeout_value of the slave read driver</div></div>",1032:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1032\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_waiting_valid_timeout_value (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets waiting_valid_timeout_value of the slave read driver. waiting_valid_timeout_value is used for driver to wait a certain number of cycles for rvalid/rready handshake occurs before it time out.</div></div>",1033:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1033\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_waiting_valid_timeout_value ()</div><div class=\"TTSummary\">Returns waiting_valid_timeout_value of the slave read driver</div></div>",1348:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1348\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_transaction_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">new_depth</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the maximum number of READ transactions that the slave read driver will have in flight at one time.</div></div>",1349:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1349\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of READ transactions that the slave read driver will have in flight at one time.</div></div>",1036:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1036\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_num_pending_cmds()</div><div class=\"TTSummary\">Returns number of commands in pending of the slave read driver.</div></div>",1037:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1037\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_cmds_inflight()</div><div class=\"TTSummary\">Returns number of commands in flight of the slave read driver.</div></div>",1038:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1038\" class=\"NDPrototype NoParameterForm\">task run_phase()</div><div class=\"TTSummary\">Start control processes for operation of the slave read driver.</div></div>",1039:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1039\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_phase()</div><div class=\"TTSummary\">Stops all control processes of the slave read driver.</div></div>",1040:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1040\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_transaction create_transaction (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_transaction&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns an AXI transaction class that has been &quot;newed&quot; of the slave read driver.</div></div>",1041:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1041\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task get_rd_reactive (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">transfer</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns Read reactive transaction. The slave VIP agent gets read cmd information,fill in data information and send it back to Slave VIP interface. The usage of this API is shown below and it MUST be put in initial, forever procedure since get_rd_reactive is blocking, so does send. Please refer example design simset sim_allconfig for function of fill_payload, fill_ruser, and fill_beat_delay etc.</div></div>",998:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype998\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send_arready(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_ready_gen&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the ready structure to the slave read driver for controlling the ARREADY channel, the arready policy will stay the same till the driver gets a new ready policy.</div></div>",1043:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1043\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_ready_gen create_ready (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_ready&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns a ready class in the slave read driver that has been &quot;newed&quot;.</div></div>",1044:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1044\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task send(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the AXI transaction to the slave read driver</div></div>",1045:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1045\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">task wait_rsp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This blocking function will not return until slave read driver send back response transaction</div></div>",1046:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1046\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">xil_axi_slv_mem_model</div></div></div><div class=\"TTSummary\">AXI Memory Model class. It is an associate array of Systemverilog. The write transaction can write to the memory and the read transaction can read data from the memory. These two features are implemented in the Slave VIP and Passthrough VIP in runtime slave mode. At the same time, the memory model has backdoor APIs for user to access memory directly. Please refer PG267 section about Simple SRAM Memory Model for more details.</div></div>",1048:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1048\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_xil_axi_slv_mem_model&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create an AXI slave memory model, ~name~ is instance name.</div></div>",1049:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1049\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_bresp_delay_policy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_memory_delay_policy_t&nbsp;</td><td class=\"PName last\">in</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets BRESP delay policy of xil_axi_slv_mem_model.</div></div>",1050:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1050\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_memory_delay_policy_t get_bresp_delay_policy()</div><div class=\"TTSummary\">Returns the current value of the BRESP delay policy of xil_axi_slv_mem_model.</div></div>",1051:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1051\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_inter_beat_gap_delay_policy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_memory_delay_policy_t&nbsp;</td><td class=\"PName last\">in</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets RDATA delay policy of xil_axi_slv_mem_model.</div></div>",1052:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1052\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_memory_delay_policy_t get_inter_beat_gap_delay_policy()</div><div class=\"TTSummary\">Returns the current value of the RDATA delay policy of xil_axi_slv_mem_model.</div></div>",1053:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1053\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_memory_fill_policy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_memory_fill_policy_t&nbsp;</td><td class=\"PName last\">default_fill_type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets default memory content fill type of xil_axi_slv_mem_model.</div></div>",1054:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1054\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_memory_fill_policy_t get_memory_fill_policy()</div><div class=\"TTSummary\">Gets default memory content fill type of xil_axi_slv_mem_model.</div></div>",1055:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1055\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_default_memory_value(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input logic&nbsp;</td><td class=\"PType\">[C_AXI_WDATA_WIDTH-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets default memory value of xil_axi_slv_mem_model.</div></div>",1056:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1056\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> logic [C_AXI_WDATA_WIDTH-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>] get_default_memory_value()</div><div class=\"TTSummary\">Returns default memory value of xil_axi_slv_mem_model.</div></div>",1057:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1057\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_inter_beat_gap(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">in&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets inter beat gap value of xil_axi_slv_mem_model.</div></div>",1058:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1058\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_inter_beat_gap()</div><div class=\"TTSummary\">Returns inter beat gap value of xil_axi_slv_mem_model.</div></div>",1059:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1059\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_inter_beat_gap_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets inter beat gap range of xil_axi_slv_mem_model.</div></div>",1060:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1060\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> get_inter_beat_gap_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets inter beat gap range of xil_axi_slv_mem_model.</div></div>",1061:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1061\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_bresp_delay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">in&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets BRESP delay value of xil_axi_slv_mem_model.</div></div>",1062:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1062\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_bresp_delay()</div><div class=\"TTSummary\">Returns BRESP delay value of xil_axi_slv_mem_model.</div></div>",1063:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1063\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_bresp_delay_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets BRESP delay range of xil_axi_slv_mem_model.</div></div>",1064:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1064\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> get_bresp_delay_range(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">max&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets BRESP delay range of xil_axi_slv_mem_model.</div></div>",1065:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1065\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> backdoor_memory_write(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input logic&nbsp;</td><td class=\"PType\">[C_AXI_WDATA_WIDTH-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">payload,</td></tr><tr><td class=\"PModifierQualifier first\">input logic&nbsp;</td><td class=\"PType\">[C_AXI_WDATA_WIDTH/<span class=\"SHNumber\">8</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">strb&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Back door write data to memory.</div></div>",1066:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1066\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> backdoor_memory_write_4byte(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input logic&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">31</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">payload,</td></tr><tr><td class=\"PModifierQualifier first\">input logic&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">3</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">strb&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Back door write data to memory in 4 byte chunks.&nbsp; It will write to the memory with address(addr) with VIP\'s data_width bits wide data(payload) and data_width/8 bits wide strobe(strb). Default strobe is all on {4{1\'b1}}.&nbsp; It will truncate the address if the addr user give is out of range.&nbsp; It will give fatal message if strobe bits is asserted at lower bits than address offset.</div></div>",1067:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1067\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> bit[C_AXI_WDATA_WIDTH-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>] backdoor_memory_read(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Back door read data from the address(addr) of memory.</div></div>",1068:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1068\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> bit[<span class=\"SHNumber\">31</span>:<span class=\"SHNumber\">0</span>] backdoor_memory_read_4byte(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Back door read data from the address(addr) of memory in 4 byte chunks.</div></div>",1069:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1069\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function</span> axi_transaction fill_rd_reactive(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Fill in read data channel from memory model.</div></div>",1070:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1070\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> fill_wr_reactive(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">inout</span>&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Fill in write bresponse channel.</div></div>",1071:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1071\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> write_transaction_to_memory(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">t</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Write transaction to memory.</div></div>",1072:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1072\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_slv_agent</div></div></div><div class=\"TTSummary\">AXI Slave Agent Class. This class contains other components that comprise the entire Slave Verification component.&nbsp; These are the Monitor, Read Driver and Write Driver.Refer PG267 section about AXI Slave Agent for more details.</div></div>",1074:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">axi_monitor&nbsp; `AXI_PARAM_ORDER monitor;</div></div>",1076:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1076\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_slv_agent&quot;</span>,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">virtual interface</span> axi_vip_if `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName\">vif</td><td></td><td class=\"last\"></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create an AXI Slave Agent. ~name~ is the instance name and axi_vip_if is the interface in the design.&nbsp; Please see PG267 for how to find the interface in design hierarchy.</div></div>",1077:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1077\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_verbosity(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_verbosity&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the verbosity of the axi_slv_agent and all sub classes. ~name~ is the instance name.</div></div>",1078:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1078\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_agent_tag(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the tag of the axi_slv_agent and all sub classes.</div></div>",1079:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1079\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_vif(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">axi_vif_mem_proxy `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the Agent\'s virtual interface. This is the interface that will be monitored and/or driven.</div></div>",1080:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1080\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_wr_transaction_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of WRITE transactions that the axi_slv_agent will have in flight at one time.</div></div>",1081:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1081\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_wr_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of WRITE transactions that the axi_slv_agent will have in flight at one time.</div></div>",1082:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1082\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_rd_transaction_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of READ transactions that the axi_slv_agent will have in flight at one time.</div></div>",1083:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1083\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_rd_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of READ transactions that the axi_slv_agent will have in flight at one time.</div></div>",1084:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1084\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> enable_transaction_depth_checks()</div><div class=\"TTSummary\">Turn on current agent\'s transaction depth check and its monitor\'s enable_transaction_depth_checks</div></div>",1085:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1085\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> disable_transaction_depth_checks()</div><div class=\"TTSummary\">Turn off current agent\'s transaction depth check and its monitor\'s enable_transaction_depth_checks</div></div>",1086:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1086\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task start_monitor()</div><div class=\"TTSummary\">Enables the monitor in this agent to start collecting data.</div></div>",1087:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1087\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task start_slave()</div><div class=\"TTSummary\">Enables the READ and WRITE drivers in this agent to start collecting data.&nbsp; The drivers will only issue transactions when the send functions are called.</div></div>",1088:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1088\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_slave()</div><div class=\"TTSummary\">Disables the READ and WRITE drivers of the slave. Once disabled, no further action will occur by the drivers.</div></div>",1089:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1089\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_monitor()</div><div class=\"TTSummary\">Disables the monitor in this agent from start collecting data. . Once disabled, no further action will occur by the monitor.</div></div>",1090:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1090\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task set_nobackpressure_readies()</div><div class=\"TTSummary\">Convenience function to set the ARREADY/WREADY/AWREADY of the slave to not apply any backpressure to the simulation.</div></div>",1091:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1091\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_slv_mem_agent</div></div></div><div class=\"TTSummary\">AXI Slave Agent with Memory model. It inherits all the features of axi_slv_agent and adds a memory model.</div></div>",1093:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">axi_monitor&nbsp; `AXI_PARAM_ORDER monitor;</div></div>",1095:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1095\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_slv_mem_agent&quot;</span>,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">virtual interface</span> axi_vip_if `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName\">vif</td><td></td><td class=\"last\"></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create an AXI Slave Agent with memory model,~name~ is the instance name&nbsp; and axi_vip_if is the interface in the design.&nbsp; Please see PG267 for how to find the interface in design hierarchy.</div></div>",1096:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1096\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_agent_tag(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the tag of the axi_slv_mem_agent and all sub classes.</div></div>",999:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype999\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task start_slave()</div><div class=\"TTSummary\">Enables the READ and WRITE drivers in this agent to start collecting data.&nbsp; The drivers will only issue transactions when the send functions are called Fill in memory model with write transaction data and fill read transaction data with data from memory model</div></div>",1098:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1098\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_passthrough_agent</div></div></div><div class=\"TTSummary\">AXI Passthrough Agent Class.The AXI passthrough agent is comprised of other classes which are monitor, runtime master write driver, runtime master read driver, runtime slave write driver, runtime slave read driver. By default, passthrough agent is in monitor mode. In order to issue transaction as master, it has to be switched to runtime master mode, in order to receive transaction, it has to be switched into runtime slave mode. Please refer PG 267 section about &quot;Useful Coding Guidelines and Examples&quot; for more details.</div></div>",1100:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">axi_monitor&nbsp; `AXI_PARAM_ORDER monitor;</div></div>",1102:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1102\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_passthrough_agent&quot;</span>,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">virtual interface</span> axi_vip_if `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName\">vif</td><td></td><td class=\"last\"></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create an AXI Passthrough Agent.~name~ is the instance name and axi_vip_if is the interface in the design.&nbsp; Please see PG267 for how to find the interface in design hierarchy.</div></div>",1103:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1103\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_verbosity(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">xil_verbosity&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the verbosity of the axi_passthrough_agent and all sub classes.</div></div>",1104:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1104\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_agent_tag(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the tag of the axi_passthrough_agent and all sub classes.</div></div>",1105:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1105\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_vif(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">axi_vif_mem_proxy `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the Agent\'s virtual interface. This is the interface that will be monitored and/or driven.</div></div>",743:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype743\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_wr_transaction_depth (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of WRITE transactions that the axi_passthrough_agent will have in flight at one time.</div></div>",1107:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1107\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_wr_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of WRITE transactions that the axi_passthrough_agent will have in flight at one time.</div></div>",1108:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1108\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_rd_transaction_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of READ transactions that the axi_passthrough_agent will have in flight at one time.</div></div>",1109:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1109\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_rd_transaction_depth()</div><div class=\"TTSummary\">Returns the maximum number of READ transactions that the axi_passthrough_agent will have in flight at one time.</div></div>",1110:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1110\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> enable_transaction_depth_checks()</div><div class=\"TTSummary\">Turn on transaction depth check and its monitor\'s enable_transaction_depth_checks in  axi_passthrough_agent</div></div>",1111:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1111\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> disable_transaction_depth_checks()</div><div class=\"TTSummary\">Turn off transaction depth check and its monitor\'s enable_transaction_depth_checks in axi_passthrough_agent</div></div>",1112:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1112\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task start_monitor()</div><div class=\"TTSummary\">Enables the monitor in this agent to start collecting data.</div></div>",1113:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1113\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task start_master()</div><div class=\"TTSummary\">Enables the READ and WRITE drivers in this agent to start collecting data.&nbsp; The drivers will only issue transactions when the send functions are called.</div></div>",1114:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1114\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task start_slave()</div><div class=\"TTSummary\">Enables the READ and WRITE drivers in this agent to start collecting data.&nbsp; The drivers will only issue transactions when the send functions are called.</div></div>",1115:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1115\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_master()</div><div class=\"TTSummary\">Disables the READ and WRITE drivers of the master. Once disabled, no further action will occur by the drivers.</div></div>",1116:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1116\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task halt_master()</div><div class=\"TTSummary\">Allows for all inflight transactions to complete and no new transaction will be serviced. All other transactions will halt.</div></div>",1117:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1117\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task resume_master()</div><div class=\"TTSummary\">Resumes processing of the pending transactions.</div></div>",1118:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1118\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_slave()</div><div class=\"TTSummary\">Disables the READ and WRITE drivers of the slave. Once disabled, no further action will occur by the drivers.</div></div>",1119:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1119\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_monitor()</div><div class=\"TTSummary\">Disables the monitor in this agent from start collecting data. . Once disabled, no further action will occur by the monitor.</div></div>",1120:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1120\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task set_nobackpressure_readies()</div><div class=\"TTSummary\">Convenience function to set the RREADY/BREADY of the master and ARREADY/WREADY/AWREADY of the slave to not apply any backpressure to the simulation.</div></div>",1121:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1121\" class=\"NDPrototype NoParameterForm\">task wait_mst_drivers_idle()</div><div class=\"TTSummary\">This blocking function will not return until all the downstream transactions have completed.</div></div>",1136:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1136\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task send_multi_wrbursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">num_xfers,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">start_addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">myid,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">mysize,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">mylen,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">myburst,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">bit&nbsp;</td><td class=\"PName last\">no_xfer_delays&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Convenience function to generate a series of same type of transactions.</div></div>",1341:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1341\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task send_multi_rand_wrbursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">num_xfers,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">bit&nbsp;</td><td class=\"PName\">no_xfer_delays&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Convenience function to generate a series of random transactions.</div></div>",899:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype899\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task send_multi_rdbursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">num_xfers,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">start_addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">myid,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">mysize,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">mylen,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">myburst,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">bit&nbsp;</td><td class=\"PName last\">no_xfer_delays&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Convenience function to generate a series of same type of transactions.</div></div>",1343:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1343\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task send_multi_rand_rdbursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName\">num_xfers,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">bit&nbsp;</td><td class=\"PName\">no_xfer_delays&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Convenience function to generate a series of random transactions.</div></div>",1122:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1122\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task AXI4_READ_BURST (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">id,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">len,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">size,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">burst,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_lock_t&nbsp;</td><td class=\"PName last\">lock,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cache_t&nbsp;</td><td class=\"PName last\">cache,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">prot,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_region_t&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_qos_t&nbsp;</td><td class=\"PName last\">qos,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_user_beat&nbsp;</td><td class=\"PName last\">aruser,</td></tr><tr><td class=\"PModifierQualifier first\">output bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">4096</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PModifierQualifier first\">output xil_axi_resp_t&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">255</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">resp,</td></tr><tr><td class=\"PModifierQualifier first\">output xil_axi_data_beat&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">255</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">ruser&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This task does a full read process for AXI4 when this passthrough agent is in runtime master mode. It is composed of a series of tasks and functions,it first creates transaction from master read driver,sets up the transaction, sends it and then waits till response back.&nbsp; This task returns when the read transaction is complete.</div></div>",1123:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1123\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task AXI3_READ_BURST (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">id,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">len,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">size,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">burst,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_lock_t&nbsp;</td><td class=\"PName last\">lock,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cache_t&nbsp;</td><td class=\"PName last\">cache,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">prot,</td></tr><tr><td class=\"PModifierQualifier first\">output bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">2048</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PModifierQualifier first\">output xil_axi_resp_t&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">15</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">resp&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This task does a full read process for AXI3 when this passthrough agent is in runtime master mode.It is composed of a series of tasks and functions,it first creates transaction from master read driver,sets up the transaction, sends it and then waits till response back.&nbsp; This task returns when the read transaction is complete.</div></div>",1124:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1124\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task AXI4LITE_READ_BURST (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">prot,</td></tr><tr><td class=\"PModifierQualifier first\">output bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">8</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_resp_t&nbsp;</td><td class=\"PName last\">resp&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This task does a full read process for AXI4LITE when this passthrough agent is in runtime master mode.It is composed of a series of tasks and functions,it first creates transaction from master read driver,sets up the transaction, sends it and then waits till response back.&nbsp; This task returns when the read transaction is complete.</div></div>",1125:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1125\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task AXI4_WRITE_BURST (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">id,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">len,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">size,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">burst,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_lock_t&nbsp;</td><td class=\"PName last\">lock,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cache_t&nbsp;</td><td class=\"PName last\">cache,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">prot,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_region_t&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_qos_t&nbsp;</td><td class=\"PName last\">qos,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_user_beat&nbsp;</td><td class=\"PName last\">awuser,</td></tr><tr><td class=\"PModifierQualifier first\">input bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">4096</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PModifierQualifier first\">input xil_axi_data_beat&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">255</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">wuser,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_resp_t&nbsp;</td><td class=\"PName last\">resp&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This task does a full write process for AXI4. It is composed of a series of tasks and&nbsp; functions.It first creates transaction from master write driver,sets up the transaction, sends it and then waits till response back.&nbsp; This task returns when the complete write transaction is complete.</div></div>",1126:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1126\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task AXI3_WRITE_BURST (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">id,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_len_t&nbsp;</td><td class=\"PName last\">len,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_size_t&nbsp;</td><td class=\"PName last\">size,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_burst_t&nbsp;</td><td class=\"PName last\">burst,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_lock_t&nbsp;</td><td class=\"PName last\">lock,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cache_t&nbsp;</td><td class=\"PName last\">cache,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">prot,</td></tr><tr><td class=\"PModifierQualifier first\">input bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">2048</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_resp_t&nbsp;</td><td class=\"PName last\">resp&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This task does a full write process for AXI3.It is composed of a series of tasks and&nbsp; functions.It first creates transaction from master write driver,sets up the transaction, sends it and then waits till response back.&nbsp; This task returns when the complete write transaction is complete.</div></div>",1127:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1127\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task AXI4LITE_WRITE_BURST (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_ulong&nbsp;</td><td class=\"PName last\">addr,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_prot_t&nbsp;</td><td class=\"PName last\">prot,</td></tr><tr><td class=\"PModifierQualifier first\">input bit&nbsp;</td><td class=\"PType\">[<span class=\"SHNumber\">8</span>*<span class=\"SHNumber\">8</span>-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]&nbsp;</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PModifierQualifier first\">output&nbsp;</td><td class=\"PType\">xil_axi_resp_t&nbsp;</td><td class=\"PName last\">resp&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">This task does a full write process for AXI4LITE.It is composed of a series of tasks and&nbsp; functions.It first creates transaction from master write driver,sets up the transaction, sends it and then waits till response back.&nbsp; This task returns when the complete write transaction is complete.</div></div>",1128:"<div class=\"NDToolTip TClass LSystemverilog\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1128\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">axi_passthrough_mem_agent</div></div></div><div class=\"TTSummary\">AXI Passthrough Agent with memory model. It inherits all the features of axi_passthough_agent and on top of that it has a memory model(Refer PG267 for memory model structure and usage).</div></div>",1130:"<div class=\"NDToolTip TInformation LSystemverilog\"><div class=\"TTSummary\">axi_monitor&nbsp; `AXI_PARAM_ORDER monitor;</div></div>",1132:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1132\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_passthrough_mem_agent&quot;</span>,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">virtual interface</span> axi_vip_if `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName\">vif</td><td></td><td class=\"last\"></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor to create an AXI Passsthrough Agent with memory model,~name~ is the instance name and axi_vip_if is the interface in the design.&nbsp; Please see PG267 for how to find the interface in design hierarchy.</div></div>",1133:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1133\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_agent_tag(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the tag of the axi_passthrough_mem_agent and all sub classes.</div></div>",1134:"<div class=\"NDToolTip TFunction LSystemverilog\"><div id=\"NDPrototype1134\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task start_slave()</div><div class=\"TTSummary\">Enables the READ and WRITE drivers in this agent to start collecting data.&nbsp; The drivers will only issue transactions when the send functions are called.</div></div>"});